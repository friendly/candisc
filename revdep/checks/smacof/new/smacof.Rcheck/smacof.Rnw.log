
> library("knitr")
Warning: package 'knitr' was built under R version 4.3.3

> opts_chunk$set(highlight = FALSE, prompt = TRUE, background = "#FFFFFF")

> options(replace.assign = TRUE, width = 72, prompt = "R> ")

> render_sweave()

> library("smacof")
Loading required package: plotrix
Loading required package: colorspace
Loading required package: e1071

Attaching package: 'smacof'

The following object is masked from 'package:base':

    transform


> idiss <- sim2diss(intelligence[, paste0("T", 1:8)])

> fitrat <- mds(idiss)

> fitint <- mds(idiss, type = "interval")

> fitord <- mds(idiss, type = "ordinal")

> fitspl <- mds(idiss, type = "mspline")

> round(c(fitrat$stress, fitint$stress, fitord$stress, 
+     fitspl$stress), 3)
[1] 0.227 0.080 0.015 0.070

> op <- par(mfrow = c(2, 2))

> plot(fitrat, plot.type = "Shepard", main = "Ratio MDS")

> plot(fitint, plot.type = "Shepard", main = "Interval MDS")

> plot(fitord, plot.type = "Shepard", main = "Ordinal MDS")

> plot(fitspl, plot.type = "Shepard", main = "Spline MDS")

> par(op)

> WishD <- sim2diss(wish, method = 7)

> fitWish <- mds(WishD)

> set.seed(123)

> stressvec <- rep(NA, 100)

> fitbest <- mds(WishD, init = "random")

> stressvec[1] <- fitbest$stress

> for (i in 2:100) {
+     fitran <- mds(WishD, init = "random")
+     stressvec[i] <- fitran$stress
+     if (fitran$stress < fitbest$stress) 
+      .... [TRUNCATED] 

> round(fitbest$stress, 4)
[1] 0.2178

> set.seed(123)

> icWish <- icExplore(WishD, nrep = 100, returnfit = TRUE)

> plot(icWish, main = "IC Plot Wish")

> LawlerD <- sim2diss(Lawler, to.dist = TRUE)

> fitLaw <- mds(LawlerD)

> set.seed(123)

> rstress <- randomstress(n = 9, ndim = 2, nrep = 500, 
+     type = "ratio")

> bound <- mean(rstress) - 2 * sd(rstress)

> round(bound, 3)
[1] 0.22

> set.seed(123)

> permLaw <- permtest(fitLaw, nrep = 500, verbose = FALSE)

> permLaw

Call: permtest.smacof(object = fitLaw, nrep = 500, verbose = FALSE)

SMACOF Permutation Test
Number of objects: 9 
Number of replications (permutations): 500 

Observed stress value: 0.241 
p-value: 0.294 


> data("Wenchuan", package = "MPsychoR")

> Wdelta <- dist(t(Wenchuan))

> fitWen <- mds(Wdelta, type = "interval")

> round(fitWen$stress, 3)
[1] 0.184

> set.seed(123)

> permWen <- permtest(fitWen, data = Wenchuan, method.dat = "euclidean", 
+     nrep = 1000, verbose = FALSE)

> permWen

Call: permtest.smacof(object = fitWen, data = Wenchuan, method.dat = "euclidean", 
    nrep = 1000, verbose = FALSE)

SMACOF Permutation Test
Number of objects: 17 
Number of replications (permutations): 1000 

Observed stress value: 0.184 
p-value: <0.001 


> op <- par(mfrow = c(1, 2))

> plot(permWen, xlim = c(0.19, 0.3))

> perm5 <- quantile(permWen$stressvec, probs = 0.05)

> hist(permWen$stressvec, xlim = c(0.1, 0.4), xlab = "Stress Values", 
+     main = "Wenchuan Permutation Histogram")

> abline(v = perm5, lty = 2, col = "gray", lwd = 2)

> abline(v = fitWen$stress, col = "gray")

> par(op)

> data("Rogers", package = "MPsychoR")

> RogersSub <- Rogers[, 1:16]

> RogersD <- dist(t(RogersSub))

> fitRogers <- mds(RogersD, type = "ordinal")

> jackRogers <- jackmds(fitRogers)

> jackRogers

Call: jackmds.smacofB(object = fitRogers)

SMACOF Jackknife
Number of objects: 16 
Value loss function: 0.3444 
Number of iterations: 12 

Stability measure: 0.998 
Cross validity: 1 
Dispersion: 0.002 


> plot(jackRogers, legend = TRUE, cex.legend = 0.8, 
+     inset = c(-0.3, 0))

> plot(bootRogers)

  When sourcing 'smacof.R':
Error: error in evaluating the argument 'x' in selecting a method for function 'plot': object 'bootRogers' not found
Execution halted
