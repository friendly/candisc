[{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Diabetes data: heplots and candisc examples","text":"Reaven Miller (1979) examined relationship among blood chemistry measures glucose tolerance insulin 145 nonobese adults. used PRIM9 system Stanford Linear Accelerator Center visualize data 3D, discovered peculiar pattern looked like large blob two wings different directions. analysis, subjects classified sub-clinical (chemical) diabetics, overt diabetics normals. study influential defining stages development Type 2 diabetes. Overt diabetes advanced stage, characterized elevated fasting blood glucose concentration classical symptoms. Preceding overt diabetes latent chemical diabetic stage, symptoms diabetes demonstrable abnormality oral intravenous glucose tolerance. Diabetes data set contained heplots package. vignette uses data illustrate various graphical methods multivariate linear models. ’ll see, data peculiar several respects standard MANOVA problematic assumptions violated. treat learning opportunity, allows us illustrate several diagnostic plots. content serves additional example recent paper visualizing tests equality variance MANOVA (Friendly & Sigal, 2017).","code":""},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"setting-up","dir":"Articles","previous_headings":"Background","what":"Setting up","title":"Diabetes data: heplots and candisc examples","text":"Load required packages data variables : relwt: relative weight, expressed ratio actual weight expected weight, given person’s height glufast: fasting plasma glucose level glutest: test plasma glucose level, measure glucose intolerance, instest: plasma insulin test, measure insulin response oral glucose, sspg: steady state plasma glucose, measure insulin resistance group: diagnostic group relwt used example, principled reason.","code":"library(heplots) library(candisc) library(car) data(Diabetes, package=\"heplots\") str(Diabetes) ## 'data.frame':    145 obs. of  6 variables: ##  $ relwt  : num  0.81 0.95 0.94 1.04 1 0.76 0.91 1.1 0.99 0.78 ... ##  $ glufast: int  80 97 105 90 90 86 100 85 97 97 ... ##  $ glutest: int  356 289 319 356 323 381 350 301 379 296 ... ##  $ instest: int  124 117 143 199 240 157 221 186 142 131 ... ##  $ sspg   : int  55 76 105 108 143 165 119 105 98 94 ... ##  $ group  : Factor w/ 3 levels \"Normal\",\"Chemical_Diabetic\",..: 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"data-ellipsoids-and-homogeneity-of-variance","dir":"Articles","previous_headings":"","what":"Data ellipsoids and homogeneity of variance","title":"Diabetes data: heplots and candisc examples","text":"start plotting covariance ellipses three variables data set. heplots::covEllipses similar dataEllipse car package, tuned plots designed assess homogeneity covariance matrices MANOVA designs. clear problem heterogeneity variance-covariance matrices . normal group shows smallest variances overt diabetic group largest.  well, plot suggests something interesting difference overt chemical diabetes groups. panel glufast glutest, appears direct progression normal chemical overt. However, true panels, chemical diabetes group differs normals one direction, overt group differs different direction within-group correlation opposite sign others. can seen easily individual scatterplots, (using car::scatterplot).  insight part reason Reaven Miller concluded chemical diabetes overt diabetes reflected different disease regimes, rather increasing progression severity. aside, note differences among groups can readily seen 3D using scatter3d car package.","code":"covEllipses(Diabetes[,2:5], Diabetes$group, fill=TRUE, pooled=FALSE,      col=c(\"blue\", \"red\", \"darkgreen\"), variables=1:3) scatterplot( instest ~ glutest | group, data=Diabetes,               pch=c(16,15,17),               col=c(\"blue\", \"red\", \"darkgreen\"),              smooth=FALSE,               grid=FALSE,               legend=list(coords=\"topright\"),               lwd=2,              ellipse=list(levels=0.5)) scatter3d(sspg ~ glutest + instest | group, data=Diabetes,            surface=FALSE,    sphere.size=1.5, ellipsoid=TRUE,           surface.col=c(\"blue\", \"red\", \"darkgreen\"))"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"boxs-m-test","dir":"Articles","previous_headings":"Data ellipsoids and homogeneity of variance","what":"Box’s M test","title":"Diabetes data: heplots and candisc examples","text":"Box’s M test confirms substantial heterogeneity covariance matrices. plot method result gives convenient informative display groups differ components (\\(log | S_i |\\)) go Box’s M test.  log determinants ordered according sizes data ellipses saw covariance ellipse plots.","code":"diab.boxm <- boxM(Diabetes[,2:5], Diabetes$group) diab.boxm ##  ##  Box's M-test for Homogeneity of Covariance Matrices ##  ## data:  Diabetes[, 2:5] ## Chi-Sq (approx.) = 383, df = 20, p-value <2e-16  op <- par(mar=c(4,6,1,1)+.5) plot(diab.boxm, cex.lab=1.5)"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"fit-the-mlm","dir":"Articles","previous_headings":"","what":"Fit the MLM","title":"Diabetes data: heplots and candisc examples","text":"ignore problem sake example, proceed fit MANOVA model mean differences among groups. MANOVA shows highly significant effect group collection response variables.","code":"diab.mlm <- lm(cbind(glufast, glutest, instest, sspg) ~ group, data=Diabetes) Anova(diab.mlm) ##  ## Type II MANOVA Tests: Pillai test statistic ##       Df test stat approx F num Df den Df Pr(>F)     ## group  2      1.18     50.1      8    280 <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"examine-residuals-in-a-qq-plot","dir":"Articles","previous_headings":"Fit the MLM","what":"Examine residuals in a QQ plot","title":"Diabetes data: heplots and candisc examples","text":"Another assumption MANOVA residuals multivariate normal distribution. can assessed visually Chi-square QQ plot. plots squared Mahalanobis distances (\\(D^2\\)) residuals vs. corresponding quantiles \\(\\chi^2\\) distribution \\(p\\) degrees freedom. cqplot function heplots package designed fitted MLM object. confidence envelope makes easy see departure large enough cause concern. can seen points differ substantially red line equality. far many points large \\(D^2\\) values.","code":"cqplot(diab.mlm, id.n = 3)"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"he-plots","dir":"Articles","previous_headings":"","what":"HE plots","title":"Diabetes data: heplots and candisc examples","text":"plot shows \\(H\\) ellipse differences among means together \\(E\\) ellipse error. default scaling, plots visual property given effect MLM significant (Roy’s maximum root test) iff \\(H\\) ellipse projects anywhere outside \\(E\\) ellipse. default, first two response variables plotted. result shows means glufast glutest ordered Normal < Chemical < Overt.  pairs method MLM gives scatterplot matrix plots pairs response variables. pattern instest seems differ variables.","code":"heplot(diab.mlm, fill=TRUE, fill.alpha=0.1) pairs(diab.mlm, fill=TRUE, fill.alpha=0.1)"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"canonical-discriminant-analysis","dir":"Articles","previous_headings":"","what":"Canonical discriminant analysis","title":"Diabetes data: heplots and candisc examples","text":"Canonical discriminant analysis effectively projects data space linear combinations responses accounts greatest proportion -group variance relative within-group variance. case, \\(g=3\\) groups, space two-dimensional, differences can seen 2D plot. output , nearly 90% -group mean differences accounted first canonical dimension. canonical dimensions significant, likelihood ratio stepdown test.","code":"diab.can <- candisc(diab.mlm) diab.can ##  ## Canonical Discriminant Analysis for group: ##  ##   CanRsq Eigenvalue Difference Percent Cumulative ## 1  0.824      4.689       4.14    89.6       89.6 ## 2  0.353      0.546       4.14    10.4      100.0 ##  ## Test of H0: The canonical correlations in the  ## current row and all that follow are zero ##  ##   LR test stat approx F numDF denDF Pr(> F)     ## 1        0.114     68.3     8   278 < 2e-16 *** ## 2        0.647     25.5     3   140 3.3e-13 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"canonical-discriminant-plot","dir":"Articles","previous_headings":"Canonical discriminant analysis","what":"Canonical discriminant plot","title":"Diabetes data: heplots and candisc examples","text":"plot method candisc object plots scores canonical dimensions overlays 60% data ellipses group. positions group means show means canonical dimensions. relationship response variables canonical dimensions shown vectors (similar biplot). vector defined correlations (structure coefficients) canonical dimensions.1  plot can seen : Dimension 1 highly related glufast, glutest sspg, groups ordered Normal < Chemical < Overt. Dimension 2 distinguishes Chemical_Diabetic group two. dimension largely related instest, plasma insulin test. confirms saw plot matrix responses. relative sizes data ellipses canonical scores another visual indication lack heterogeneity variances.","code":"plot(diab.can, ellipse=TRUE, var.lwd=2)"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"canonical-he-plot","dir":"Articles","previous_headings":"Canonical discriminant analysis","what":"Canonical HE plot","title":"Diabetes data: heplots and candisc examples","text":"heplot method candisc objects gives plot summary canonical discriminant analysis. variable vectors canonical structure plot. size \\(H\\) ellipse relative \\(E\\) ellipse indication magnitude multivariate effect group.","code":"heplot(diab.can, fill=c(TRUE, FALSE), fill.alpha=0.1, var.lwd=2) ## Vector scale factor set to  12.06"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"other-analyses","dir":"Articles","previous_headings":"","what":"Other analyses","title":"Diabetes data: heplots and candisc examples","text":"methods used analyze data display results visually. merely sketch alternatives .","code":""},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"linear-and-quadratic-discriminant-analysis","dir":"Articles","previous_headings":"Other analyses","what":"Linear and quadratic discriminant analysis","title":"Diabetes data: heplots and candisc examples","text":"Linear discriminant analysis (LDA) similar spirit MANOVA, emphasis classification rather testing differences among means. well, LDA allows specification prior probabilities group membership make classification error rates comparable obtained population interest. Quadratic discriminant analysis allows differences covariance matrices among groups, gives quadratic rather linear classification boundaries. LDA sense equivalent canonical discriminant analysis. simple function lda MASS package. gives class means variance proportions candisc. However, , prior probabilities taken proportions groups data. LDA perspective, one goal visualizing results see boundaries classification based LD1 LD2 scores. plot shown produced ggplot2, following method described stackoverflow question. missing indication relates response variables. Quadratic discriminant analysis can carried similar way, using qda function. results shown.","code":"library(MASS) diab.lda <- lda(group ~ glufast + glutest + instest + sspg, data = Diabetes) diab.lda ## Call: ## lda(group ~ glufast + glutest + instest + sspg, data = Diabetes) ##  ## Prior probabilities of groups: ##            Normal Chemical_Diabetic    Overt_Diabetic  ##            0.5241            0.2483            0.2276  ##  ## Group means: ##                   glufast glutest instest  sspg ## Normal              91.18   350.0   172.6 114.0 ## Chemical_Diabetic   99.31   493.9   288.0 209.0 ## Overt_Diabetic     217.67  1043.8   106.0 318.9 ##  ## Coefficients of linear discriminants: ##                LD1       LD2 ## glufast  0.0326457 -0.038928 ## glutest -0.0119958  0.006560 ## instest  0.0003149  0.006202 ## sspg    -0.0056269  0.003231 ##  ## Proportion of trace: ##    LD1    LD2  ## 0.8958 0.1042"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"recursive-partitioning","dir":"Articles","previous_headings":"Other analyses","what":"Recursive partitioning","title":"Diabetes data: heplots and candisc examples","text":"Recursive partitioning method creates decision tree designed classify members population. recursively splits data sub-populations using dichotomous intervals predictors. One strength method nicely tied cross-validation, sample repeatedly split training test samples, model fit training sample assessed test sample. diabetes data, result simple: value glutest < 420 distinguishes normals two clinical groups. latter, glufast < 117 classifies individual chemical diabetic rather overt diabetic. nice plot partition tree produced using rpart.plot package. numbers nodes give proportions classified three groups. well ? can examine table predicted group membership vs. actual calculate error rate. bad!","code":"library(rpart) diab.part <- rpart(group ~ glufast + glutest + instest + sspg, data=Diabetes) diab.part ## n= 145  ##  ## node), split, n, loss, yval, (yprob) ##       * denotes terminal node ##  ## 1) root 145 69 Normal (0.52414 0.24828 0.22759)   ##   2) glutest< 420.5 76  1 Normal (0.98684 0.01316 0.00000) * ##   3) glutest>=420.5 69 34 Chemical_Diabetic (0.01449 0.50725 0.47826)   ##     6) glufast< 117 36  1 Chemical_Diabetic (0.02778 0.97222 0.00000) * ##     7) glufast>=117 33  0 Overt_Diabetic (0.00000 0.00000 1.00000) * library(rpart.plot) rpart.plot(diab.part, box.palette=list(\"Blues\", \"Reds\",  \"Greens\")) (class.pred <- table(predicted=predict(diab.part, type=\"class\"), actual=Diabetes$group)) ##                    actual ## predicted           Normal Chemical_Diabetic Overt_Diabetic ##   Normal                75                 1              0 ##   Chemical_Diabetic      1                35              0 ##   Overt_Diabetic         0                 0             33  # error rate 1 - sum(diag(class.pred))/sum(class.pred) ## [1] 0.01379"},{"path":"https://friendly.github.io/candisc/articles/diabetes.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Diabetes data: heplots and candisc examples","text":"Friendly, M. & Sigal, M. (2017) Visualizing Tests Equality Covariance Matrices. Submitted publication. Reaven, G. M. & Miller, R. G. (1979). Attempt Define Nature Chemical Diabetes Using Multidimensional Analysis Diabetologia, 16, 17-24.","code":""},{"path":"https://friendly.github.io/candisc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Friendly. Author, maintainer. John Fox. Author.","code":""},{"path":"https://friendly.github.io/candisc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Friendly M, Fox J (2024). candisc: Visualizing Generalized Canonical Discriminant Canonical Correlation Analysis. R package version 0.9.0, https://CRAN.R-project.org/package=heplots. Friendly M (2007). “plots Multivariate General Linear Models.” Journal Computational Graphical Statistics, 16(2), 421-444. doi:10.1198/106186007X208407.","code":"@Manual{,   title = {{candisc}: Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis},   author = {Michael Friendly and John Fox},   year = {2024},   note = {R package version 0.9.0},   url = {https://CRAN.R-project.org/package=heplots}, } @Article{,   title = {HE plots for Multivariate General Linear Models},   author = {Michael Friendly},   journal = {Journal of Computational and Graphical Statistics},   year = {2007},   volume = {16},   number = {2},   pages = {421-444},   doi = {10.1198/106186007X208407}, }"},{"path":"https://friendly.github.io/candisc/index.html","id":"candisc-","dir":"","previous_headings":"","what":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis","title":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis","text":"Visualizing Generalized Canonical Discriminant Canonical Correlation Analysis Version 0.7.0 package includes functions computing visualizing generalized canonical discriminant analyses canonical correlation analysis multivariate linear model. goal provide ways visualizing models low-dimensional space corresponding dimensions (linear combinations response variables) maximal relationship predictor variables. Traditional canonical discriminant analysis restricted one-way MANOVA design equivalent canonical correlation analysis set quantitative response variables set dummy variables coded factor variable. candisc package generalizes multi-way MANOVA designs terms multivariate linear model (.e., mlm object), computing canonical scores vectors term (giving \"candiscList\" object). graphic functions designed provide low-rank (1D, 2D, 3D) visualizations terms mlm via plot.candisc method, plot heplot.candisc() heplot3d.candisc() methods. mlms response variables, methods often provide much simpler interpretation nature effects canonical space heplots pairs responses plot matrix responses variable space. Analogously, multivariate linear (regression) model quantitative predictors can also represented reduced-rank space means canonical correlation transformation Y X variables uncorrelated canonical variates, Ycan Xcan. Computation analysis provided cancor related methods. Visualization results canonical space provided plot.cancor(), heplot.cancor() heplot3d.cancor() methods. relations among response variables linear models can also useful “effect ordering” (Friendly & Kwan (2003) variables multivariate data displays make displayed relationships coherent. function varOrder() implements collection methods.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis","text":"new vignette, vignette(\"diabetes\", package=\"candisc\"), illustrates methods. comprehensive collection examples contained vignette heplots package, browseVignettes(package = \"heplots\").","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical Correlation Analysis — cancor","title":"Canonical Correlation Analysis — cancor","text":"function cancor generalizes regularizes computation canonical correlation analysis way conducive visualization using methods heplots package. package provides following display, extractor plotting methods \"cancor\" objects print(), summary() Print summarise CCA coef() Extract coefficients X, Y, scores() Extract observation scores canonical variables redundancy() Redundancy analysis: proportion variances variables set (X Y) accounted variables set canonical variates plot() Plot pairs canonical scores data ellipse regression line heplot() plot Y canonical variables showing effects X variables projections          Y variables space. well, function provides observation weights, may useful situations, well providing basis robust methods potential outliers can -weighted.","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical Correlation Analysis — cancor","text":"","code":"cancor(x, ...)  # S3 method for formula cancor(formula, data, subset, weights, na.rm = TRUE, method = \"gensvd\", ...)  # S3 method for default cancor(   x,   y,   weights,   X.names = colnames(x),   Y.names = colnames(y),   row.names = rownames(x),   xcenter = TRUE,   ycenter = TRUE,   xscale = FALSE,   yscale = FALSE,   ndim = min(p, q),   set.names = c(\"X\", \"Y\"),   prefix = c(\"Xcan\", \"Ycan\"),   na.rm = TRUE,   use = if (na.rm) \"complete\" else \"pairwise\",   method = \"gensvd\",   ... )  # S3 method for cancor print(x, digits = max(getOption(\"digits\") - 2, 3), ...)  # S3 method for cancor summary(object, digits = max(getOption(\"digits\") - 2, 3), ...)  # S3 method for cancor scores(x, type = c(\"x\", \"y\", \"both\", \"list\", \"data.frame\"), ...)  # S3 method for cancor coef(object, type = c(\"x\", \"y\", \"both\", \"list\"), standardize = FALSE, ...)"},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical Correlation Analysis — cancor","text":"x Varies depending method. cancor.default method, matrix data.frame whose columns contain X variables ... arguments, passed methods formula two-sided formula form cbind(y1, y2, y3, ...) ~ x1 + x2 + x3 + ... data data.frame within formula evaluated subset optional vector specifying subset observations used calculations. weights Observation weights. supplied, must vector length equal number observations X Y, typically within [0,1].  case, variance-covariance matrices computed using cov.wt, number observations taken number non-zero weights. na.rm logical, determining whether observations missing cases excluded computation variance matrix (X,Y).  See Notes details missing data. method method used calculation; currently method = \"gensvd\" supported; y cancor.default method, matrix data.frame whose columns contain Y variables X.names, Y.names Character vectors names X Y variables. row.names Observation names x, y xcenter, ycenter logical. Center X, Y variables? [yet implemented] xscale, yscale logical. Scale X, Y variables unit variance? [yet implemented] ndim Number canonical dimensions retain result, scores, coefficients, etc. set.names vector two character strings, giving names collections X, Y variables. prefix vector two character strings, giving prefixes used name X Y canonical variables, respectively. use argument passed var determining missing data handled.  default, use=\"complete\" allowed observation weights supplied. digits Number digits passed print summary methods object cancor object related methods. type coef method, type coefficients returned, one \"x\", \"y\", \"\". scores method, list, \"data.frame\", returns data.frame containing X Y canonical scores. standardize coef method, whether coefficients standardized dividing standard deviations X Y variables.","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical Correlation Analysis — cancor","text":"object class cancorr, list following        components: cancor Canonical correlations, .e., correlations        canonical variate Y variables corresponding        canonical variate X variables. names Names various        items, list 4 components: X, Y, row.names, set.names ndim Number canonical dimensions extracted, <= min(p,q) dim Problem dimensions, list 3 components:          p (number X variables),           q (number Y variables),           n (sample size) coef Canonical coefficients, list 2 components: X, Y scores Canonical variate scores, list 2 components: X, Y scores Canonical variate scores, list 2 components: X Canonical variate scores X variables Y Canonical variate scores Y variables  X matrix X Y matrix Y weights Observation weights, supplied, else NULL structure Structure correlations, list 4 components:     X.xscores,      Y.xscores,      X.yscores,      Y.yscores structure Structure correlations (\"loadings\"), list 4 components: X.xscores Structure correlations X variables Xcan canonical scores Y.xscores Structure correlations Y variables Xcan canonical scores X.yscores Structure correlations X variables Ycan canonical scores Y.yscores Structure correlations Y variables Ycan canonical scores formula method also returns components call terms","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Canonical Correlation Analysis — cancor","text":"Canonical correlation analysis (CCA), traditionally presented used identify measure associations two sets quantitative variables, X Y.  often used situations multivariate multiple regression analysis (MMRA) used. However, CCA “symmetric” sets X Y equivalent status, goal find orthogonal linear combinations maximal (canonical) correlations. hand, MMRA “asymmetric”, Y set considered responses, one explained separate linear combinations Xs. Let \\(\\mathbf{Y}_{n \\times p}\\) \\(\\mathbf{X}_{n \\times q}\\) two sets variables  CCA computed. find canonical coefficients \\(\\mathbf{}_{p \\times k}\\)  \\(\\mathbf{B}_{q \\times k}, k=\\min(p,q)\\) canonical variables  $$\\mathbf{U}_{n \\times k} = \\mathbf{Y} \\mathbf{} \\quad \\text{} \\quad        \\mathbf{V}_{n \\times k} = \\mathbf{X} \\mathbf{B}$$  maximal, diagonal correlation structure. , coefficients \\(\\mathbf{}\\) \\(\\mathbf{B}\\) chosen (canonical) correlations pair \\(r_i = \\text{cor}(\\mathbf{u}_i, \\mathbf{v}_i), =1, 2, \\dots , k\\)  maximized pairs uncorrelated, \\(r_{ij} = \\text{cor}(\\mathbf{u}_i, \\mathbf{v}_j) = 0,  \\ne j\\). Thus, correlations X Y variables channeled correlations pairs canonical variates. visualization using plots, natural consider plots representing relations among canonical variables Y variables terms multivariate linear model predicting Y canonical scores, using either X variables X canonical scores predictors.  plots, using heplot.cancor provide low-rank (1D, 2D, 3D) visualization relations two sets, useful cases 2 3 variables X Y. connection CCA plots MMRA models can developed follows. CCA can also viewed principal component transformation predicted values one set variables regression set variables, metric error covariance matrix. example, regress Y variables X variables, giving predicted values \\(\\hat{Y} = X (X'X)^{-1} X' Y\\) residuals \\(R = Y - \\hat{Y}\\). error covariance matrix \\(E = R'R/(n-1)\\).  Choose transformation Q orthogonalizes error covariance matrix identity, , \\((RQ)'(RQ) = Q' R' R Q = (n-1) \\), apply transformation predicted values yield, say, \\(Z = \\hat{Y} Q\\). , principal component analysis covariance matrix Z gives eigenvalues \\(E^{-1} H\\), equivalent MMRA analysis lm(Y ~ X) statistically, visualized canonical space.","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Canonical Correlation Analysis — cancor","text":"cancor(formula): \"formula\" method. cancor(default): \"default\" method.","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Canonical Correlation Analysis — cancor","text":"print(cancor): print() method \"cancor\" objects. summary(cancor): summary() method \"cancor\" objects. scores(cancor): scores() method \"cancor\" objects. coef(cancor): coef() method \"cancor\" objects.","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Canonical Correlation Analysis — cancor","text":"features CCA presently implemented: standardized vs. raw scores, flexible handling missing data, plot methods, ...","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical Correlation Analysis — cancor","text":"Gittins, R. (1985). Canonical Analysis: Review Applications Ecology, Berlin: Springer. Mardia, K. V., Kent, J. T. Bibby, J. M. (1979). Multivariate Analysis. London: Academic Press.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical Correlation Analysis — cancor","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/cancor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical Correlation Analysis — cancor","text":"","code":"data(Rohwer, package=\"heplots\") X <- as.matrix(Rohwer[,6:10])  # the PA tests Y <- as.matrix(Rohwer[,3:5])   # the aptitude/ability variables  # visualize the correlation matrix using corrplot() if (require(corrplot)) { M <- cor(cbind(X,Y)) corrplot(M, method=\"ellipse\", order=\"hclust\", addrect=2, addCoef.col=\"black\") } #> Loading required package: corrplot #> corrplot 0.92 loaded    (cc <- cancor(X, Y, set.names=c(\"PA\", \"Ability\"))) #>  #> Canonical correlation analysis of: #> \t 5   PA  variables:  n, s, ns, na, ss  #>   with\t 3   Ability  variables:  SAT, PPVT, Raven  #>  #>     CanR  CanRSQ   Eigen percent    cum                          scree #> 1 0.6703 0.44934 0.81599   77.30  77.30 ****************************** #> 2 0.3837 0.14719 0.17260   16.35  93.65 ******                         #> 3 0.2506 0.06282 0.06704    6.35 100.00 **                             #>  #> Test of H0: The canonical correlations in the  #> current row and all that follow are zero #>  #>      CanR LR test stat approx F numDF denDF   Pr(> F)     #> 1 0.67033      0.44011   3.8961    15 168.8 5.535e-06 *** #> 2 0.38366      0.79923   1.8379     8 124.0   0.07608 .   #> 3 0.25065      0.93718   1.4078     3  63.0   0.24881     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  ## Canonical correlation analysis of: ##       5   PA  variables:  n, s, ns, na, ss  ##   with        3   Ability  variables:  SAT, PPVT, Raven  ##  ##     CanR  CanRSQ   Eigen percent    cum                          scree ## 1 0.6703 0.44934 0.81599   77.30  77.30 ****************************** ## 2 0.3837 0.14719 0.17260   16.35  93.65 ******                         ## 3 0.2506 0.06282 0.06704    6.35 100.00 **                             ##  ## Test of H0: The canonical correlations in the  ## current row and all that follow are zero ##  ##      CanR  WilksL      F df1   df2  p.value ## 1 0.67033 0.44011 3.8961  15 168.8 0.000006 ## 2 0.38366 0.79923 1.8379   8 124.0 0.076076 ## 3 0.25065 0.93718 1.4078   3  63.0 0.248814   # formula method cc <- cancor(cbind(SAT, PPVT, Raven) ~  n + s + ns + na + ss, data=Rohwer,      set.names=c(\"PA\", \"Ability\")) #> Warning: non-list contrasts argument ignored  # using observation weights set.seed(12345) wts <- sample(0:1, size=nrow(Rohwer), replace=TRUE, prob=c(.05, .95)) (ccw <- cancor(X, Y, set.names=c(\"PA\", \"Ability\"), weights=wts) ) #>  #> Canonical correlation analysis of: #> \t 5   PA  variables:  n, s, ns, na, ss  #>   with\t 3   Ability  variables:  SAT, PPVT, Raven  #>  #>     CanR  CanRSQ   Eigen percent    cum                          scree #> 1 0.6738 0.45396 0.83136  78.894  78.89 ****************************** #> 2 0.3827 0.14645 0.17157  16.282  95.18 ******                         #> 3 0.2199 0.04837 0.05083   4.824 100.00 **                             #>  #> Test of H0: The canonical correlations in the  #> current row and all that follow are zero #>  #>      CanR LR test stat approx F numDF  denDF   Pr(> F)     #> 1 0.67376      0.44353   3.4755    15 152.23 4.139e-05 *** #> 2 0.38268      0.81227   1.5338     8 112.00    0.1534     #> 3 0.21993      0.95163   0.9658     3  57.00    0.4152     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  # show correlations of the canonical scores  zapsmall(cor(scores(cc, type=\"x\"), scores(cc, type=\"y\"))) #>           Ycan1     Ycan2     Ycan3 #> Xcan1 0.6703254 0.0000000 0.0000000 #> Xcan2 0.0000000 0.3836569 0.0000000 #> Xcan3 0.0000000 0.0000000 0.2506487  # standardized coefficients coef(cc, type=\"both\", standardize=TRUE) #> [[1]] #>         Xcan1       Xcan2      Xcan3 #> n  -0.2918658 -0.17681207  0.5064680 #> s   0.2376371  0.49037479  1.0227353 #> ns  0.6217178  1.21506423 -0.5090243 #> na -0.8636882 -0.58576035 -0.3154802 #> ss -0.5380809 -0.04973148 -0.2171691 #>  #> [[2]] #>            Ycan1      Ycan2      Ycan3 #> SAT   -0.4279751 -0.7620281  0.7643153 #> PPVT  -0.8117586  0.2691718 -0.8335792 #> Raven  0.1940206  0.9301330  0.6401159 #>   # plot canonical scores plot(cc,       smooth=TRUE, pch=16, id.n = 3) text(-2, 1.5, paste(\"Can R =\", round(cc$cancor[1], 3)), pos = 4)  plot(cc, which = 2,      smooth=TRUE, pch=16, id.n = 3) text(-2.2, 2.5, paste(\"Can R =\", round(cc$cancor[2], 3)), pos = 4)   ################## data(schooldata) ##################  #fit the MMreg model school.mod <- lm(cbind(reading, mathematics, selfesteem) ~  education + occupation + visit + counseling + teacher, data=schooldata) car::Anova(school.mod) #>  #> Type II MANOVA Tests: Pillai test statistic #>            Df test stat approx F num Df den Df    Pr(>F)     #> education   1   0.37564  12.4337      3     62 1.820e-06 *** #> occupation  1   0.56658  27.0159      3     62 2.687e-11 *** #> visit       1   0.26032   7.2734      3     62 0.0002948 *** #> counseling  1   0.06465   1.4286      3     62 0.2429676     #> teacher     1   0.04906   1.0661      3     62 0.3700291     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 pairs(school.mod)   # canonical correlation analysis school.cc <- cancor(cbind(reading, mathematics, selfesteem) ~  education + occupation + visit + counseling + teacher, data=schooldata) #> Warning: non-list contrasts argument ignored school.cc #>  #> Canonical correlation analysis of: #> \t 5   X  variables:  education, occupation, visit, counseling, teacher  #>   with\t 3   Y  variables:  reading, mathematics, selfesteem  #>  #>     CanR CanRSQ    Eigen  percent    cum                          scree #> 1 0.9967 0.9934 151.0502 99.09963  99.10 ****************************** #> 2 0.7456 0.5559   1.2516  0.82112  99.92                                #> 3 0.3283 0.1078   0.1208  0.07925 100.00                                #>  #> Test of H0: The canonical correlations in the  #> current row and all that follow are zero #>  #>      CanR LR test stat approx F numDF  denDF   Pr(> F)     #> 1 0.99671      0.00261   87.272    15 171.56 < 2.2e-16 *** #> 2 0.74556      0.39627    9.270     8 126.00 5.476e-10 *** #> 3 0.32829      0.89222    2.577     3  64.00   0.06141 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 heplot(school.cc, xpd=TRUE, scale=0.3)"},{"path":"https://friendly.github.io/candisc/reference/candisc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis — candisc-package","title":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis — candisc-package","text":"package includes functions computing visualizing generalized canonical discriminant analyses canonical correlation analysis multivariate linear model.  goal provide ways visualizing models low-dimensional space corresponding dimensions (linear combinations response variables) maximal relationship predictor variables.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis — candisc-package","text":"Traditional canonical discriminant analysis restricted one-way MANOVA design equivalent canonical correlation analysis set quantitative response variables set dummy variables coded factor variable. candisc package generalizes multi-way MANOVA designs terms multivariate linear model (.e., mlm object), computing canonical scores vectors term (giving candiscList object). graphic functions designed provide low-rank (1D, 2D, 3D) visualizations terms mlm via plot.candisc method, plot heplot.candisc heplot3d.candisc methods. mlms response variables, methods often provide much simpler interpretation nature effects canonical space heplots pairs responses plot matrix responses variable space. Analogously, multivariate linear (regression) model quantitative predictors can also represented reduced-rank space means canonical correlation transformation Y X variables uncorrelated canonical variates, Ycan Xcan.  Computation analysis provided cancor related methods. Visualization results canonical space provided plot.cancor, heplot.cancor heplot3d.cancor methods. relations among response variables linear models can also useful “effect ordering” (Friendly & Kwan (2003) variables multivariate data displays make displayed relationships coherent.  function varOrder implements collection methods. new vignette, vignette(\"diabetes\", package=\"candisc\"), illustrates methods. comprehensive collection examples contained vignette heplots package, vignette(\"-examples\", package=\"heplots\"). organization functions package heplots package may change later version.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis — candisc-package","text":"Friendly, M. (2007).  plots Multivariate General Linear Models.   Journal Computational Graphical Statistics, 16(2) 421--444.  http://datavis.ca/papers/jcgs-heplots.pdf, doi:10.1198/106186007X208407 . Friendly, M. & Kwan, E. (2003). Effect Ordering Data Displays, Computational Statistics Data Analysis, 43, 509-539. doi:10.1016/S0167-9473(02)00290-6 Friendly, M. & Sigal, M. (2014). Recent Advances Visualizing Multivariate Linear Models. Revista Colombiana de Estadistica , 37(2), 261-283.  doi:10.15446/rce.v37n2spe.47934 . Friendly, M. & Sigal, M. (2017). Graphical Methods Multivariate Linear Models Psychological Research: R Tutorial, Quantitative Methods Psychology, 13 (1), 20-45. doi:10.20982/tqmp.13.1.p020 . Gittins, R. (1985). Canonical Analysis: Review Applications Ecology, Berlin: Springer.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/candisc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualizing Generalized Canonical Discriminant and Canonical Correlation Analysis — candisc-package","text":"Michael Friendly John Fox Maintainer: Michael Friendly <friendly@yorku.ca>","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical discriminant analysis — candisc","title":"Canonical discriminant analysis — candisc","text":"candisc performs generalized canonical discriminant analysis one term multivariate linear model (.e., mlm object), computing canonical scores vectors.  represents transformation original variables canonical space maximal differences term, controlling model terms.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical discriminant analysis — candisc","text":"","code":"candisc(mod, ...)  # S3 method for mlm candisc(mod, term, type = \"2\", manova, ndim = rank, ...)  # S3 method for candisc print(x, digits = max(getOption(\"digits\") - 2, 3), LRtests = TRUE, ...)  # S3 method for candisc summary(   object,   means = TRUE,   scores = FALSE,   coef = c(\"std\"),   ndim,   digits = max(getOption(\"digits\") - 2, 4),   ... )  # S3 method for candisc coef(object, type = c(\"std\", \"raw\", \"structure\"), ...)  # S3 method for candisc plot(   x,   which = 1:2,   conf = 0.95,   col,   pch,   scale,   asp = 1,   var.col = \"blue\",   var.lwd = par(\"lwd\"),   var.labels,   var.cex = 1,   var.pos,   rev.axes = c(FALSE, FALSE),   ellipse = FALSE,   ellipse.prob = 0.68,   fill.alpha = 0.1,   prefix = \"Can\",   suffix = TRUE,   titles.1d = c(\"Canonical scores\", \"Structure\"),   points.1d = FALSE,   ... )"},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical discriminant analysis — candisc","text":"mod mlm object, computed lm() multivariate response ... arguments passed .  particular, type=\"n\" can used plot method suppress display canonical scores. term name one term mod canonical analysis performed. type type test model term, one : \"II\", \"III\", \"2\", \"3\" manova Anova.mlm object corresponding mod. Normally, computed internally Anova(mod) ndim Number dimensions store (retrieve , summary method) means, structure, scores coeffs.* components.   default rank H matrix hypothesis term. digits significant digits print. LRtests logical; likelihood ratio tests canonical dimensions printed? object, x candisc object means Logical value used determine canonical means printed scores Logical value used determine canonical scores printed coef Type coefficients printed summary method. one \"std\", \"raw\", \"structure\" vector one two integers, selecting canonical dimension(s) plot. canonical structure term ndim==1, length()==1, 1D representation canonical scores structure coefficients produced plot method. Otherwise, 2D plot produced. conf Confidence coefficient confidence circles around canonical means plotted plot method col vector unique colors used levels term plot method, one level term.  version, assign colors point symbols explicitly, rather relying somewhat arbitrary defaults, based palette pch vector unique point symbols used levels term plot method scale Scale factor variable vectors canonical space.  specified, scale factor calculated make variable vectors approximately fill plot space. asp Aspect ratio plot method.  asp=1 (default) assures units horizontal vertical axes , lengths angles variable vectors interpretable. var.col Color used plot variable vectors var.lwd Line width used plot variable vectors var.labels Optional vector variable labels replace variable names plots var.cex Character expansion size variable labels plots var.pos Position(s) variable vector labels wrt. end point.  specified, labels -justified left right respect end points. rev.axes Logical, vector length(). TRUE causes orientation canonical scores structure coefficients reversed along given axis. ellipse Draw data ellipses canonical scores? ellipse.prob Coverage probability data ellipses fill.alpha Transparency value color used fill ellipses.  Use fill.alpha draw ellipses unfilled. prefix Prefix used label canonical dimensions plotted suffix Suffix labels canonical dimensions. suffix=TRUE percent hypothesis (H) variance accounted canonical dimension added axis label. titles.1d character vector length 2, containing titles panels used plot canonical scores structure vectors, case one canonical dimension. points.1d Logical value plot.candisc one canonical dimension.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical discriminant analysis — candisc","text":"object class candisc following components: dfh hypothesis degrees freedom term dfe error degrees freedom mlm rank number non-zero eigenvalues \\(^{-1}\\) eigenvalues eigenvalues \\(^{-1}\\) canrsq squared canonical correlations pct vector containing percentages canrsq total. ndim Number canonical dimensions stored means,      structure coeffs.* components means data.frame containing class means levels       factor(s) term factors data frame containing levels factor(s) term term name term terms character vector containing names terms      mlm object coeffs.raw matrix containing raw canonical coefficients coeffs.std matrix containing standardized canonical coefficients structure matrix containing canonical structure     coefficients ndim dimensions, .e., correlations     original variates canonical scores.  sometimes referred     Total Structure Coefficients. scores data frame containing     predictors mlm model canonical scores ndim     dimensions.  calculated Y %*% coeffs.raw, Y     contains standardized response variables.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Canonical discriminant analysis — candisc","text":"typical usage, term factor interaction corresponding multivariate test 2 degrees freedom null hypothesis. Canonical discriminant analysis typically carried conjunction one-way MANOVA design. represents linear transformation response variables canonical space () successive canonical variate produces maximal separation among groups (e.g., maximum univariate F statistics), (b) canonical variates mutually uncorrelated.  one-way MANOVA g groups p responses, dfh = min( g-1, p) canonical dimensions, tests, initially stated Bartlett (1938) allow one determine number significant canonical dimensions. Computational details one-way case described Cooley & Lohnes (1971), SAS/STAT User's Guide, \"CANDISC procedure: Computational Details,\" http://support.sas.com/documentation/cdl/en/statug/63962/HTML/default/viewer.htm#statug_candisc_sect012.htm. generalized canonical discriminant analysis extends idea general multivariate linear model.  Analysis term mlm produces rank \\(df_h\\) H matrix sum squares crossproducts matrix tested rank \\(df_e\\) E matrix standard multivariate tests (Wilks' Lambda, Hotelling-Lawley trace, Pillai trace, Roy's maximum root test).  given term mlm, generalized canonical discriminant analysis amounts standard discriminant analysis based H matrix term relation full-model E matrix. plot method candisc objects typically 2D plot, similar biplot. shows canonical scores groups defined term points canonical structure coefficients vectors origin. canonical structure term ndim==1, length()==1, 1D representation consists boxplot canonical scores vector diagram showing magnitudes structure coefficients.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Canonical discriminant analysis — candisc","text":"candisc(mlm): \"mlm\" method.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Canonical discriminant analysis — candisc","text":"print(candisc): print() method \"candisc\" objects. summary(candisc): summary() method \"candisc\" objects. coef(candisc): coef() method \"candisc\" objects. plot(candisc): \"plot\" method.","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical discriminant analysis — candisc","text":"Bartlett, M. S. (1938). aspects theory multiple regression. Proc. Cambridge Philosophical Society 34, 33-34. Cooley, W.W. & Lohnes, P.R. (1971). Multivariate Data Analysis, New York: Wiley. Gittins, R. (1985). Canonical Analysis: Review Applications Ecology, Berlin: Springer.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical discriminant analysis — candisc","text":"Michael Friendly John Fox","code":""},{"path":"https://friendly.github.io/candisc/reference/candisc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical discriminant analysis — candisc","text":"","code":"grass.mod <- lm(cbind(N1,N9,N27,N81,N243) ~ Block + Species, data=Grass) car::Anova(grass.mod, test=\"Wilks\") #>  #> Type II MANOVA Tests: Wilks test statistic #>         Df test stat approx F num Df  den Df    Pr(>F)     #> Block    4   0.33721   1.5620     20  80.549   0.08372 .   #> Species  7   0.01570   4.9756     35 103.389 1.039e-10 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  grass.can1 <-candisc(grass.mod, term=\"Species\") plot(grass.can1) #> Vector scale factor set to 5.545   # library(heplots) heplot(grass.can1, scale=6, fill=TRUE)   # iris data iris.mod <- lm(cbind(Petal.Length, Sepal.Length, Petal.Width, Sepal.Width) ~ Species, data=iris) iris.can <- candisc(iris.mod, data=iris) #-- assign colors and symbols corresponding to species col <- c(\"red\", \"brown\", \"green3\") pch <- 1:3 plot(iris.can, col=col, pch=pch) #> Vector scale factor set to 9.58   heplot(iris.can)  #> Vector scale factor set to  43.914   # 1-dim plot iris.can1 <- candisc(iris.mod, data=iris, ndim=1) plot(iris.can1)"},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical discriminant analyses — candiscList","title":"Canonical discriminant analyses — candiscList","text":"candiscList performs generalized canonical discriminant analysis terms multivariate linear model (.e., mlm object), computing canonical scores vectors.","code":""},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical discriminant analyses — candiscList","text":"","code":"candiscList(mod, ...)  # S3 method for mlm candiscList(mod, type = \"2\", manova, ndim, ...)  # S3 method for candiscList print(x, ...)  # S3 method for candiscList summary(object, ...)  # S3 method for candiscList plot(x, term, ask = interactive(), graphics = TRUE, ...)"},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical discriminant analyses — candiscList","text":"mod mlm object, computed lm() multivariate response ... arguments passed . type type test model term, one : \"II\", \"III\", \"2\", \"3\" manova Anova.mlm object corresponding mod. Normally, computed internally Anova(mod) ndim Number dimensions store means, structure, scores coeffs.* components.   default rank H matrix hypothesis term. object, x candiscList object term name one term plotted plot method. specified, one candisc plot produced term mlm object. ask TRUE (default, running interactively), menu terms presented; ask FALSE, canonical plots terms produced. graphics TRUE (default, running interactively), menu terms plot presented dialog box rather text menu.","code":""},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical discriminant analyses — candiscList","text":"object class candiscList list  \"candisc\" objects terms mlm.","code":""},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Canonical discriminant analyses — candiscList","text":"candiscList(mlm): \"mlm\" method.","code":""},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Canonical discriminant analyses — candiscList","text":"print(candiscList): print() method \"candiscList\" objects. summary(candiscList): summary() method \"candiscList\" objects. plot(candiscList): plot() method \"candiscList\" objects.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical discriminant analyses — candiscList","text":"Michael Friendly John Fox","code":""},{"path":"https://friendly.github.io/candisc/reference/candiscList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical discriminant analyses — candiscList","text":"","code":"grass.mod <- lm(cbind(N1,N9,N27,N81,N243) ~ Block + Species, data=Grass)  grass.canL <-candiscList(grass.mod) names(grass.canL) #> [1] \"Block\"   \"Species\" names(grass.canL$Species) #>  [1] \"dfh\"         \"dfe\"         \"eigenvalues\" \"canrsq\"      \"pct\"         #>  [6] \"rank\"        \"ndim\"        \"means\"       \"factors\"     \"term\"        #> [11] \"terms\"       \"coeffs.raw\"  \"coeffs.std\"  \"structure\"   \"scores\"       if (FALSE) { print(grass.canL) } plot(grass.canL, type=\"n\", ask=FALSE) #> Vector scale factor set to 4.527  #> Vector scale factor set to 5.545  heplot(grass.canL$Species, scale=6)  heplot(grass.canL$Block, scale=2)"},{"path":"https://friendly.github.io/candisc/reference/can_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","title":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","text":"function uses candisc transform responses multivariate linear model scores canonical variables given term uses scores responses linear (lm) multivariate linear model (mlm). function constructs model formula form Can ~ terms Can canonical score(s) terms terms original mlm, runs lm() formula.","code":""},{"path":"https://friendly.github.io/candisc/reference/can_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","text":"","code":"can_lm(mod, term, ...)"},{"path":"https://friendly.github.io/candisc/reference/can_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","text":"mod mlm object term One term model ... Arguments passed candisc","code":""},{"path":"https://friendly.github.io/candisc/reference/can_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","text":"lm object term rank 1 hypothesis, otherwise mlm object","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/can_lm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/can_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a Multivariate Linear model mlm to a Canonical Representation — can_lm","text":"","code":"iris.mod <- lm(cbind(Petal.Length, Sepal.Length, Petal.Width, Sepal.Width) ~ Species, data=iris) iris.can <- can_lm(iris.mod, \"Species\") iris.can #>  #> Call: #> lm(formula = cbind(Can1, Can2) ~ Species, data = scores) #>  #> Coefficients: #>                    Can1     Can2    #> (Intercept)        -7.6076  -0.2151 #> Speciesversicolor   9.4326   0.9430 #> Speciesvirginica   13.3902  -0.2976 #>  car::Anova(iris.mod) #>  #> Type II MANOVA Tests: Pillai test statistic #>         Df test stat approx F num Df den Df    Pr(>F)     #> Species  2    1.1919   53.466      8    290 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 car::Anova(iris.can) #>  #> Type II MANOVA Tests: Pillai test statistic #>         Df test stat approx F num Df den Df    Pr(>F)     #> Species  2    1.1919   108.41      4    294 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://friendly.github.io/candisc/reference/dataIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Indices of observations in a model data frame — dataIndex","title":"Indices of observations in a model data frame — dataIndex","text":"Find sequential indices observations data frame corresponding unique combinations levels given model term model object data frame","code":""},{"path":"https://friendly.github.io/candisc/reference/dataIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indices of observations in a model data frame — dataIndex","text":"","code":"dataIndex(x, term)"},{"path":"https://friendly.github.io/candisc/reference/dataIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indices of observations in a model data frame — dataIndex","text":"x Either data frame model object term name one term model, consisting factors","code":""},{"path":"https://friendly.github.io/candisc/reference/dataIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indices of observations in a model data frame — dataIndex","text":"vector indices.","code":""},{"path":"https://friendly.github.io/candisc/reference/dataIndex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Indices of observations in a model data frame — dataIndex","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/dataIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indices of observations in a model data frame — dataIndex","text":"","code":"factors <- expand.grid(A=factor(1:3),B=factor(1:2),C=factor(1:2)) n <- nrow(factors) responses <-data.frame(Y1=10+round(10*rnorm(n)),Y2=10+round(10*rnorm(n)))  test <- data.frame(factors, responses) mod <- lm(cbind(Y1,Y2) ~ A*B, data=test)  dataIndex(mod, \"A\") #>  [1] 1 2 3 1 2 3 1 2 3 1 2 3 dataIndex(mod, \"A:B\") #>  [1] 1 2 3 4 5 6 1 2 3 4 5 6"},{"path":"https://friendly.github.io/candisc/reference/Grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Yields from Nitrogen nutrition of grass species — Grass","title":"Yields from Nitrogen nutrition of grass species — Grass","text":"data frame Grass gives yield (10 * log10 dry-weight (g)) eight grass Species five replicates (Block) grown sand culture five levels nitrogen.","code":""},{"path":"https://friendly.github.io/candisc/reference/Grass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Yields from Nitrogen nutrition of grass species — Grass","text":"data frame 40 observations following 7 variables. Species factor levels B.media       D.glomerata F.ovina F.rubra H.pubesens       K.cristata L.perenne P.bertolonii Block factor levels 1 2 3 4 5 N1 species yield 1 ppm Nitrogen N9 species yield 9 ppm Nitrogen N27 species yield 27 ppm Nitrogen N81 species yield 81 ppm Nitrogen N243 species yield 243 ppm Nitrogen","code":""},{"path":"https://friendly.github.io/candisc/reference/Grass.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Yields from Nitrogen nutrition of grass species — Grass","text":"Gittins, R. (1985), Canonical Analysis: Review Applications Ecology, Berlin: Springer-Verlag, Table -5.","code":""},{"path":"https://friendly.github.io/candisc/reference/Grass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Yields from Nitrogen nutrition of grass species — Grass","text":"Nitrogen (NaNO3) levels chosen vary expected critically low almost toxic.  amount Nitrogen can considered log3 scale, levels 0, 2, 3, 4, 5.  Gittins (1985, Ch. 11) treats equally spaced purpose testing polynomial trends Nitrogen level. data also truly multivariate, rather split-plot experimental design.  purpose exposition, regards Species experimental unit, correlations among responses refer composite representative species rather individual exemplar.","code":""},{"path":"https://friendly.github.io/candisc/reference/Grass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Yields from Nitrogen nutrition of grass species — Grass","text":"","code":"str(Grass) #> 'data.frame':\t40 obs. of  7 variables: #>  $ Species: Factor w/ 8 levels \"B.media\",\"D.glomerata\",..: 7 7 7 7 7 2 2 2 2 2 ... #>  $ Block  : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ... #>  $ N1     : num  1.013 0.945 1.045 0.987 0.826 ... #>  $ N9     : num  1.71 1.58 1.48 1.46 1.34 ... #>  $ N27    : num  1.64 1.53 1.62 1.55 1.49 ... #>  $ N81    : num  2.08 2.07 1.73 2.07 1.89 ... #>  $ N243   : num  1.96 2.12 2.09 2.21 1.95 ... grass.mod <- lm(cbind(N1,N9,N27,N81,N243) ~ Block + Species, data=Grass) car::Anova(grass.mod) #>  #> Type II MANOVA Tests: Pillai test statistic #>         Df test stat approx F num Df den Df   Pr(>F)     #> Block    4   0.90834   1.5865     20    108  0.06902 .   #> Species  7   2.03696   2.7498     35    140 1.49e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  grass.canL <-candiscList(grass.mod) names(grass.canL) #> [1] \"Block\"   \"Species\" names(grass.canL$Species) #>  [1] \"dfh\"         \"dfe\"         \"eigenvalues\" \"canrsq\"      \"pct\"         #>  [6] \"rank\"        \"ndim\"        \"means\"       \"factors\"     \"term\"        #> [11] \"terms\"       \"coeffs.raw\"  \"coeffs.std\"  \"structure\"   \"scores\""},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical Correlation HE plots — heplot.cancor","title":"Canonical Correlation HE plots — heplot.cancor","text":"Hypothesis - Error () plots canonical correlation analysis provide new graphical method understanding relations two sets variables, \\(\\mathbf{X}\\) \\(\\mathbf{Y}\\). similar plots multivariate multiple regression (MMRA) problems, except ... functions plot ellipses (ellipsoids 3D) canonical space representing hypothesis error sums--squares--products matrices terms multivariate linear model representing result canonical correlation analysis. provide low-rank 2D (3D) view effects space maximum canonical correlations, together variable vectors representing correlations Y variables canonical dimensions. consistency heplot.candisc, plots show effects space canonical Y variables selected . interpretation variable vectors plots different terms plotted H \"ellipses,\" appear degenerate lines plot (correspond 1 df tests rank(H)=1). canonical space, interpretation H ellipses terms ordinary plots: term significant iff H ellipse projects outside (orthogonalized) E ellipsoid somewhere space Y canonical dimensions. orientation H ellipse respect Y canonical dimensions indicates dimensions X variate contributes . hand, variable vectors shown plots intended show correlations Y variables canonical dimensions. relative lengths angles respect Y canonical dimensions meaning. Relative lengths correspond proportions variance accounted Y canonical dimensions plotted; angles variable vectors canonical axes correspond structure correlations.  absolute lengths vectors typically manipulated scale argument provide better visual resolution labeling variables. Setting aspect ratio plots important proper interpretation angles variable vectors coordinate axes.  However, makes impossible change aspect ratio plot re-sizing manually.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical Correlation HE plots — heplot.cancor","text":"","code":"# S3 method for cancor heplot(   mod,   which = 1:2,   scale,   asp = 1,   var.vectors = \"Y\",   var.col = c(\"blue\", \"darkgreen\"),   var.lwd = par(\"lwd\"),   var.cex = par(\"cex\"),   var.xpd = TRUE,   prefix = \"Ycan\",   suffix = TRUE,   terms = TRUE,   ... )"},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical Correlation HE plots — heplot.cancor","text":"mod cancor object numeric vector containing indices Y canonical dimensions plot. scale Scale factor variable vectors canonical space.  specified, function calculates one make variable vectors approximately fill plot window. asp aspect ratio setting. Use asp=1 2D plots asp=\"iso\" 3D plots ensure equal units axes. Use asp=NA 2D plots asp=NULL 3D plots  allow separate scaling axes. See Details . var.vectors variable vectors plot?  character vector containing one \"X\" \"Y\". var.col Color(s) variable vectors labels, vector length 1 2.  first color used Y vectors second X vectors, plotted. var.lwd Line width variable vectors var.cex Text size variable vector labels var.xpd logical. Allow variable labels outside plot box? apply 3D plots. prefix Prefix labels Y canonical dimensions. suffix Suffix labels canonical dimensions. suffix=TRUE percent hypothesis (H) variance accounted canonical dimension added axis label. terms Terms X variables plotted canonical space.  default, terms=TRUE terms=\"X\" plots H ellipses X variables. terms=\"Xcan\" plots H ellipses X canonical variables, Xcan1, Xcan2, .... ... arguments passed link[heplots]{heplot}. particular, can pass linear hypotheses among term variables via hypotheses.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical Correlation HE plots — heplot.cancor","text":"Returns invisibly object class \"heplot\",       coordinates various hypothesis ellipses error ellipse,       limits horizontal vertical axes.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical Correlation HE plots — heplot.cancor","text":"Gittins, R. (1985). Canonical Analysis: Review Applications Ecology, Berlin: Springer. Mardia, K. V., Kent, J. T. Bibby, J. M. (1979). Multivariate Analysis. London: Academic Press.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical Correlation HE plots — heplot.cancor","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.cancor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical Correlation HE plots — heplot.cancor","text":"","code":"data(Rohwer, package=\"heplots\") X <- as.matrix(Rohwer[,6:10]) Y <- as.matrix(Rohwer[,3:5]) cc <- cancor(X, Y, set.names=c(\"PA\", \"Ability\"))  # basic plot heplot(cc)  #> Vector scale factor set to  1   # note relationship of joint hypothesis to individual ones heplot(cc, scale=1.25, hypotheses=list(\"na+ns\"=c(\"na\", \"ns\")))   # more options heplot(cc, hypotheses=list(\"All X\"=colnames(X)),   fill=c(TRUE,FALSE), fill.alpha=0.2,   var.cex=1.5, var.col=\"red\", var.lwd=3,   prefix=\"Y canonical dimension\"   )  #> Vector scale factor set to  2   # 3D version if (FALSE) { heplot3d(cc, var.lwd=3, var.col=\"red\") }"},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical Discriminant HE plots — heplot.candisc","title":"Canonical Discriminant HE plots — heplot.candisc","text":"functions plot ellipses (ellipsoids 3D) canonical discriminant space representing hypothesis error sums--squares--products matrices terms multivariate linear model. provide low-rank 2D (3D) view effects term space maximum discrimination.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical Discriminant HE plots — heplot.candisc","text":"","code":"# S3 method for candisc heplot(   mod,   which = 1:2,   scale,   asp = 1,   var.col = \"blue\",   var.lwd = par(\"lwd\"),   var.cex = par(\"cex\"),   var.pos,   rev.axes = c(FALSE, FALSE),   prefix = \"Can\",   suffix = TRUE,   terms = mod$term,   ... )"},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical Discriminant HE plots — heplot.candisc","text":"mod candisc object one term mlm numeric vector containing indices canonical dimensions plot. scale Scale factor variable vectors canonical space.  specified, function calculates one make variable vectors approximately fill plot window. asp Aspect ratio horizontal vertical dimensions. defaults, asp=1 heplot.candisc asp=\"iso\" heplot3d.candisc ensure equal units axes, angles lengths variable vectors interpretable. well, standardized canonical scores uncorrelated, Error ellipse (ellipsoid) plot circle (sphere) canonical space.  heplot3d.candisc, use asp=NULL suppress transformation iso-scaled axes. var.col Color variable vectors labels var.lwd Line width variable vectors var.cex Text size variable vector labels var.pos Position(s) variable vector labels wrt. end point.  specified, labels -justified left right respect end points. rev.axes Logical, vector length(). TRUE causes orientation canonical scores structure coefficients reversed along given axis. prefix Prefix labels canonical dimensions. suffix Suffix labels canonical dimensions. suffix=TRUE percent hypothesis (H) variance accounted canonical dimension added axis label. terms Terms original mlm whose H ellipses plotted canonical space.  default one term canonical scores computed.  terms=TRUE, terms plotted. ... Arguments passed heplot heplot3d","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical Discriminant HE plots — heplot.candisc","text":"heplot.candisc returns invisibly object class \"heplot\", coordinates various hypothesis ellipses error ellipse, limits horizontal vertical axes. Similarly, heploted.candisc returns object class \"heplot3d\".","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Canonical Discriminant HE plots — heplot.candisc","text":"generalized canonical discriminant analysis one term mlm based eigenvalues, \\(\\lambda_i\\), eigenvectors, V, H E matrices term.  produces uncorrelated canonical scores give maximum univariate F statistics. canonical plot just plot canonical scores given term. heplot3d.candisc, default asp=\"iso\" now gives geometrically correct plot, third dimension, CAN3, often small. Passing expanded range zlim heplot3d usually helps.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical Discriminant HE plots — heplot.candisc","text":"Friendly, M. (2006). Data Ellipses, Plots Reduced-Rank Displays Multivariate Linear Models: SAS Software Examples Journal Statistical Software, 17(6), 1-42.   https://www.jstatsoft.org/v17/i06/ doi:10.18637/jss.v017.i06 Friendly, M. (2007).  plots Multivariate General Linear Models.   Journal Computational Graphical Statistics, 16(2) 421--444.  http://datavis.ca/papers/jcgs-heplots.pdf, doi:10.1198/106186007X208407 .","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical Discriminant HE plots — heplot.candisc","text":"Michael Friendly John Fox","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candisc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical Discriminant HE plots — heplot.candisc","text":"","code":"## Pottery data, from car package data(Pottery, package = \"carData\") pottery.mod <- lm(cbind(Al, Fe, Mg, Ca, Na) ~ Site, data=Pottery) pottery.can <-candisc(pottery.mod)  heplot(pottery.can, var.lwd=3)  #> Vector scale factor set to  14.83312  if(requireNamespace(\"rgl\")){ heplot3d(pottery.can, var.lwd=3, scale=10, zlim=c(-3,3), wire=FALSE) }   # reduce example for CRAN checks time # \\donttest{ grass.mod <- lm(cbind(N1,N9,N27,N81,N243) ~ Block + Species, data=Grass)  grass.can1 <-candisc(grass.mod,term=\"Species\") grass.canL <-candiscList(grass.mod)  heplot(grass.can1, scale=6)  heplot(grass.can1, scale=6, terms=TRUE)  heplot(grass.canL, terms=TRUE, ask=FALSE)  #> Vector scale factor set to  4.772952   #> Vector scale factor set to  7.150784   heplot3d(grass.can1, wire=FALSE) #> Vector scale factor set to  5  # compare with non-iso scaling rgl::aspect3d(x=1,y=1,z=1) # or, # heplot3d(grass.can1, asp=NULL) # }  ## Can't run this in example # rgl::play3d(rgl::spin3d(axis = c(1, 0, 0), rpm = 5), duration=12)  # reduce example for CRAN checks time # \\donttest{ ## FootHead data, from heplots package library(heplots) data(FootHead)  # use Helmert contrasts for group contrasts(FootHead$group) <- contr.helmert  foot.mod <- lm(cbind(width, circum,front.back,eye.top,ear.top,jaw)~group, data=FootHead) foot.can <- candisc(foot.mod) heplot(foot.can, main=\"Candisc HE plot\",   hypotheses=list(\"group.1\"=\"group1\",\"group.2\"=\"group2\"),  col=c(\"red\", \"blue\", \"green3\", \"green3\" ), var.col=\"red\")  #> Vector scale factor set to  8.776984  # }"},{"path":"https://friendly.github.io/candisc/reference/heplot.candiscList.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical Discriminant HE plots — heplot.candiscList","title":"Canonical Discriminant HE plots — heplot.candiscList","text":"functions plot ellipses (ellipsoids 3D) canonical discriminant space representing hypothesis error sums--squares--products matrices terms multivariate linear model. provide low-rank 2D (3D) view effects term space maximum discrimination.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candiscList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical Discriminant HE plots — heplot.candiscList","text":"","code":"# S3 method for candiscList heplot(mod, term, ask = interactive(), graphics = TRUE, ...)"},{"path":"https://friendly.github.io/candisc/reference/heplot.candiscList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical Discriminant HE plots — heplot.candiscList","text":"mod candiscList object terms mlm term name one term plotted heplot heplot3d methods. specified, one plot produced term mlm object. ask TRUE (default), menu terms presented; ask FALSE, canonical plots terms produced. graphics TRUE (default, running interactively), menu terms plot presented dialog box rather text menu. ... Arguments passed ","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candiscList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical Discriminant HE plots — heplot.candiscList","text":"useful value; used side-effect producing canonical plots.","code":""},{"path":"https://friendly.github.io/candisc/reference/heplot.candiscList.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical Discriminant HE plots — heplot.candiscList","text":"Friendly, M. (2006). Data Ellipses, Plots Reduced-Rank Displays Multivariate Linear Models: SAS Software Examples  Journal Statistical Software, 17(6), 1-42. https://www.jstatsoft.org/v17/i06/ doi:10.18637/jss.v017.i06 . Friendly, M. (2007).  plots Multivariate General Linear Models.   Journal Computational Graphical Statistics, 16(2) 421--444.  http://datavis.ca/papers/jcgs-heplots.pdf, doi:10.1198/106186007X208407 .","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/heplot.candiscList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical Discriminant HE plots — heplot.candiscList","text":"Michael Friendly John Fox","code":""},{"path":"https://friendly.github.io/candisc/reference/HSB.html","id":null,"dir":"Reference","previous_headings":"","what":"High School and Beyond Data — HSB","title":"High School and Beyond Data — HSB","text":"High School Beyond Project longitudinal study students U.S. carried 1980 National Center Education Statistics.  Data collected 58,270 high school students (28,240 seniors 30,030 sophomores) 1,015 secondary schools.  HSB data frame sample 600 observations, unknown characteristics, originally taken Tatsuoka (1988).","code":""},{"path":"https://friendly.github.io/candisc/reference/HSB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"High School and Beyond Data — HSB","text":"data frame 600 observations following 15 variables. missing data. id Observation id: numeric vector gender factor levels male female race Race ethnicity: factor levels      hispanic asian african-amer white ses Socioeconomic status: factor levels low middle high sch School type: factor levels public private prog High school program: factor levels general academic      vocation locus Locus control: numeric vector concept Self-concept: numeric vector mot Motivation: numeric vector career Career plan: factor levels clerical      craftsman farmer homemaker laborer      manager military operative prof1 prof2      proprietor protective sales school      service technical working read Standardized reading score: numeric vector write Standardized writing score: numeric vector math Standardized math score: numeric vector sci Standardized science score: numeric vector ss Standardized social science (civics) score: numeric vector","code":""},{"path":"https://friendly.github.io/candisc/reference/HSB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"High School and Beyond Data — HSB","text":"Tatsuoka, M. M. (1988).  Multivariate Analysis: Techniques Educational Psychological Research (2nd ed.). New York: Macmillan, Appendix F, 430-442.","code":""},{"path":"https://friendly.github.io/candisc/reference/HSB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"High School and Beyond Data — HSB","text":"High School Beyond data files: http://www.icpsr.umich.edu/icpsrweb/ICPSR/studies/7896","code":""},{"path":"https://friendly.github.io/candisc/reference/HSB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"High School and Beyond Data — HSB","text":"","code":"str(HSB) #> 'data.frame':\t600 obs. of  15 variables: #>  $ id     : num  55 114 490 44 26 510 133 213 548 309 ... #>  $ gender : Factor w/ 2 levels \"male\",\"female\": 2 1 1 2 2 1 2 2 2 2 ... #>  $ race   : Factor w/ 4 levels \"hispanic\",\"asian\",..: 1 3 4 1 1 4 3 4 4 4 ... #>  $ ses    : Factor w/ 3 levels \"low\",\"middle\",..: 1 2 2 1 2 2 1 1 2 3 ... #>  $ sch    : Factor w/ 2 levels \"public\",\"private\": 1 1 1 1 1 1 1 1 2 1 ... #>  $ prog   : Factor w/ 3 levels \"general\",\"academic\",..: 1 2 3 3 2 3 3 1 2 1 ... #>  $ locus  : num  -1.78 0.24 -1.28 0.22 1.12 ... #>  $ concept: num  0.56 -0.35 0.34 -0.76 -0.74 ... #>  $ mot    : num  1 1 0.33 1 0.67 ... #>  $ career : Factor w/ 17 levels \"clerical\",\"craftsman\",..: 9 8 9 15 15 8 14 1 10 10 ... #>  $ read   : num  28.3 30.5 31 31 31 ... #>  $ write  : num  46.3 35.9 35.9 41.1 41.1 ... #>  $ math   : num  42.8 36.9 46.1 49.2 36 ... #>  $ sci    : num  44.4 33.6 39 33.6 36.9 ... #>  $ ss     : num  50.6 40.6 45.6 35.6 45.6 ... # main effects model hsb.mod <- lm( cbind(read, write, math, sci, ss) ~     gender + race + ses + sch + prog, data=HSB) car::Anova(hsb.mod) #>  #> Type II MANOVA Tests: Pillai test statistic #>        Df test stat approx F num Df den Df    Pr(>F)     #> gender  1   0.19207  27.8615      5    586 < 2.2e-16 *** #> race    3   0.20268   8.5207     15   1764 < 2.2e-16 *** #> ses     2   0.04965   2.9886     10   1174 0.0009909 *** #> sch     1   0.01225   1.4535      5    586 0.2032987     #> prog    2   0.21466  14.1152     10   1174 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  # Add some interactions hsb.mod1 <- update(hsb.mod, . ~ . + gender:race + ses:prog) heplot(hsb.mod1, col=palette()[c(2,1,3:6)], variables=c(\"read\",\"math\"))   hsb.can1 <- candisc(hsb.mod1, term=\"race\") heplot(hsb.can1, col=c(\"red\", \"black\"))  #> Vector scale factor set to  6.5031   # show canonical results for all terms if (FALSE) { hsb.can <- candiscList(hsb.mod) hsb.can }"},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical Correlation Plots — plot.cancor","title":"Canonical Correlation Plots — plot.cancor","text":"function produces plots help visualize X, Y data canonical space. present implementation plots canonical scores Y variables X variables given dimensions. treat view data canonical space, offer additional annotations standard scatterplot. Canonical correlation analysis assumes correlations X Y variables can expressed terms correlations canonical variate pairs, (Xcan1, Ycan1), (Xcan2, Ycan2), ..., relations pairs indeed linear. Data ellipses, smoothed (loess) curves, together linear regression line canonical dimension help assess whether peculiarities data might threaten validity CCA. Point identification methods can useful determine influential cases.","code":""},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical Correlation Plots — plot.cancor","text":"","code":"# S3 method for cancor plot(   x,   which = 1,   xlim,   ylim,   xlab,   ylab,   points = TRUE,   add = FALSE,   col = palette()[1],   ellipse = TRUE,   ellipse.args = list(),   smooth = FALSE,   smoother.args = list(),   col.smooth = palette()[3],   abline = TRUE,   col.lines = palette()[2],   lwd = 2,   labels = rownames(xy),   id.method = \"mahal\",   id.n = 0,   id.cex = 1,   id.col = palette()[1],   ... )"},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical Correlation Plots — plot.cancor","text":"x \"cancor\" object dimension plot? integer 1:x$ndim. xlim, ylim Limits x y axes xlab, ylab Labels x y axes.  specified, constructed set.names component x. points logical.  Display points? add logical.  Add existing plot? col Color points. ellipse logical. Draw data ellipse canonical scores? ellipse.args list arguments passed dataEllipse. Internally, function sets default value levels 0.68. smooth logical. Draw (loess) smoothed curve? smoother.args Arguments passed loessLine, consulted details defaults. col.smooth Color smoothed curve. abline logical. Draw linear regression line Ycan[,] Xcan[,]? col.lines Color linear regression line lwd Line widths labels Point labels point identification via id.method argument. id.method Method used identify individual points. See showLabels details.  default,  id.method = \"mahal\" identifies id.n points furthest  centroid. id.n Number points identify id.cex, id.col Character size color labeled points ... arguments passed plot(...) points(...)","code":""},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical Correlation Plots — plot.cancor","text":"None.  Used side effect producing plot. value returned","code":""},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical Correlation Plots — plot.cancor","text":"Mardia, K. V., Kent, J. T. Bibby, J. M. (1979). Multivariate Analysis. London: Academic Press.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical Correlation Plots — plot.cancor","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/plot.cancor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical Correlation Plots — plot.cancor","text":"","code":"data(Rohwer, package=\"heplots\") X <- as.matrix(Rohwer[,6:10])  # the PA tests Y <- as.matrix(Rohwer[,3:5])   # the aptitude/ability variables  cc <- cancor(X, Y, set.names=c(\"PA\", \"Ability\"))  plot(cc)  # exercise some options plot(cc, which=1,      smooth=TRUE,       pch = 16,      id.n=3, ellipse.args=list(fill=TRUE, fill.alpha = 0.2))  plot(cc, which=2, smooth=TRUE)  plot(cc, which=3, smooth=TRUE)    # plot vectors showing structure correlations of Xcan and Ycan with their own variables plot(cc) struc <- cc$structure Xstruc <- struc$X.xscores[,1] Ystruc <- struc$Y.yscores[,1] scale <- 2  # place vectors in the margins of the plot usr <- matrix(par(\"usr\"), nrow=2, dimnames=list(c(\"min\", \"max\"), c(\"x\", \"y\"))) ypos <- usr[2,2] - (1:5)/10  arrows(0, ypos, scale*Xstruc, ypos, angle=10, len=0.1, col=\"blue\") text(scale*Xstruc, ypos, names(Xstruc), pos=2, col=\"blue\")  xpos <- usr[2,1] - ( 1 + 1:3)/10 arrows(xpos, 0, xpos, scale*Ystruc, angle=10, len=0.1, col=\"darkgreen\") text(xpos, scale*Ystruc, names(Ystruc), pos=1, col=\"darkgreen\")"},{"path":"https://friendly.github.io/candisc/reference/predictor.names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predictor names from a lm-like model — predictor.names","title":"Get predictor names from a lm-like model — predictor.names","text":"Get predictor names lm-like model","code":""},{"path":"https://friendly.github.io/candisc/reference/predictor.names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predictor names from a lm-like model — predictor.names","text":"","code":"predictor.names(model, ...)  # S3 method for default predictor.names(model, ...)"},{"path":"https://friendly.github.io/candisc/reference/predictor.names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predictor names from a lm-like model — predictor.names","text":"model Model object ... arguments (ignored)","code":""},{"path":"https://friendly.github.io/candisc/reference/predictor.names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predictor names from a lm-like model — predictor.names","text":"character vector variable names","code":""},{"path":"https://friendly.github.io/candisc/reference/predictor.names.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get predictor names from a lm-like model — predictor.names","text":"predictor.names(default): \"default\" method.","code":""},{"path":"https://friendly.github.io/candisc/reference/predictor.names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get predictor names from a lm-like model — predictor.names","text":"","code":"#none"},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical Redundancy Analysis — redundancy","title":"Canonical Redundancy Analysis — redundancy","text":"Calculates indices redundancy (Stewart & Love, 1968) canonical correlation analysis. give proportion variances variables set (X Y) accounted variables set canonical variates.","code":""},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical Redundancy Analysis — redundancy","text":"","code":"redundancy(object, ...)  # S3 method for cancor.redundancy print(x, digits = max(getOption(\"digits\") - 3, 3), ...)"},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical Redundancy Analysis — redundancy","text":"object \"cancor\" object ... arguments x \"cancor.redundancy\" print method. digits Number digits print","code":""},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical Redundancy Analysis — redundancy","text":"object class \"cancor.redundancy\", list  following 5 components: Xcan.redun Canonical redundancies X variables, .e.,       total fraction X variance accounted Y variables       canonical variate. Ycan.redun Canonical redundancies Y variables X.redun Total canonical redundancy X variables,       .e., sum Xcan.redun. Y.redun Total canonical redundancy Y variables set.names names X Y sets variables","code":""},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Canonical Redundancy Analysis — redundancy","text":"term \"redundancy analysis\" different interpretation implementation environmental ecology literature, vegan. context, \\(Y_i\\) variable regressed separately predictors \\(X\\), give fitted values \\(\\widehat{Y} = [\\widehat{Y}_1, \\widehat{Y}_2, \\dots\\). PCA \\(\\widehat{Y}\\) carried determine reduced-rank structure  predictions.","code":""},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Canonical Redundancy Analysis — redundancy","text":"print(cancor.redundancy): print() method \"cancor.redundancy\" objects.","code":""},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canonical Redundancy Analysis — redundancy","text":"Muller K. E. (1981). Relationships redundancy analysis, canonical correlation, multivariate regression.  Psychometrika, 46(2), 139-42. Stewart, D. Love, W. (1968). general canonical correlation index.  Psychological Bulletin, 70, 160-163. Brainder, \"Redundancy canonical correlation analysis\",  https://brainder.org/2019/12/27/redundancy--canonical-correlation-analysis/","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canonical Redundancy Analysis — redundancy","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/redundancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical Redundancy Analysis — redundancy","text":"","code":"data(Rohwer, package=\"heplots\") X <- as.matrix(Rohwer[,6:10])  # the PA tests Y <- as.matrix(Rohwer[,3:5])   # the aptitude/ability variables  cc <- cancor(X, Y, set.names=c(\"PA\", \"Ability\"))  redundancy(cc) #>  #> Redundancies for the PA variables & total X canonical redundancy #>  #>     Xcan1     Xcan2     Xcan3 total X|Y  #>  0.173424  0.042113  0.007966  0.223503  #>  #> Redundancies for the Ability variables & total Y canonical redundancy #>  #>     Ycan1     Ycan2     Ycan3 total Y|X  #>   0.22491   0.03688   0.01564   0.27743  ##  ## Redundancies for the PA variables & total X canonical redundancy ##  ##     Xcan1     Xcan2     Xcan3 total X|Y  ##   0.17342   0.04211   0.00797   0.22350  ##  ## Redundancies for the Ability variables & total Y canonical redundancy ##  ##     Ycan1     Ycan2     Ycan3 total Y|X  ##    0.2249    0.0369    0.0156    0.2774"},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Order variables according to canonical structure or other criteria — varOrder","title":"Order variables according to canonical structure or other criteria — varOrder","text":"varOrder function implements features “effect ordering” (Friendly & Kwan (2003) variables multivariate data display make displayed relationships coherent. can used pairwise plots, scatterplot matrices, parallel coordinate plots, plots multivariate means, forth. numeric data frame, useful displays often order variables according angles variable vectors 2D principal component analysis biplot. multivariate linear model, analog use angles variable vectors 2D canonical discriminant biplot.","code":""},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order variables according to canonical structure or other criteria — varOrder","text":"","code":"varOrder(x, ...)  # S3 method for mlm varOrder(   x,   term,   variables,   type = c(\"can\", \"pc\"),   method = c(\"angles\", \"dim1\", \"dim2\", \"alphabet\", \"data\", \"colmean\"),   names = FALSE,   descending = FALSE,   ... )  # S3 method for data.frame varOrder(   x,   variables,   method = c(\"angles\", \"dim1\", \"dim2\", \"alphabet\", \"data\", \"colmean\"),   names = FALSE,   descending = FALSE,   ... )  # S3 method for default varOrder(x, ...)"},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order variables according to canonical structure or other criteria — varOrder","text":"x multivariate linear model numeric data frame ... Arguments passed methods term mlm method, one term model canonical structure coefficients found. variables indices names variables ordered; defaults response variables MLM numeric variables data frame. type MLM, type=\"can\" uses canonical structure coefficients given term; type=\"pc\" uses principal component variable eigenvectors. method One c(\"angles\", \"dim1\", \"dim2\", \"alphabet\", \"data\",       \"colmean\") giving effect ordering method. \"angles\" Orders variables according angles vectors make    dimensions 1 2, counter-clockwise starting lower-left    quadrant 2D biplot candisc display. \"dim1\" Orders variables    increasing order coordinates dimension 1 \"dim2\" Orders variables increasing order coordinates    dimension 2 \"alphabet\" Orders variables alphabetically \"data\" Uses order variables data frame list    responses MLM \"colmean\" Uses order column means    variables data frame list responses MLM names logical; TRUE effect ordered names variables returned; otherwise, indices variables returned. descending TRUE, ordered result reversed descending order.","code":""},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order variables according to canonical structure or other criteria — varOrder","text":"vector integer indices variables character vector     names.","code":""},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Order variables according to canonical structure or other criteria — varOrder","text":"varOrder(mlm): \"mlm\" method. varOrder(data.frame): \"data.frame\" method. varOrder(default): \"default\" method.","code":""},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Order variables according to canonical structure or other criteria — varOrder","text":"Friendly, M. & Kwan, E. (2003). Effect Ordering Data     Displays, Computational Statistics Data Analysis, 43,     509-539. doi:10.1016/S0167-9473(02)00290-6","code":""},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Order variables according to canonical structure or other criteria — varOrder","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/varOrder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order variables according to canonical structure or other criteria — varOrder","text":"","code":"data(Wine, package=\"candisc\") Wine.mod <- lm(as.matrix(Wine[, -1]) ~ Cultivar, data=Wine) Wine.can <- candisc(Wine.mod) plot(Wine.can, ellipse=TRUE) #> Vector scale factor set to 5.168   # pairs.mlm HE plot, variables in given order pairs(Wine.mod, fill=TRUE, fill.alpha=.1, var.cex=1.5)   order <- varOrder(Wine.mod) pairs(Wine.mod, variables=order, fill=TRUE, fill.alpha=.1, var.cex=1.5)"},{"path":"https://friendly.github.io/candisc/reference/vecscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale vectors to fill the current plot — vecscale","title":"Scale vectors to fill the current plot — vecscale","text":"Calculates scale factor collection vectors nearly fills current plot, , longest vector extend beyond plot region.","code":""},{"path":"https://friendly.github.io/candisc/reference/vecscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale vectors to fill the current plot — vecscale","text":"","code":"vecscale(   vectors,   bbox = matrix(par(\"usr\"), 2, 2),   origin = c(0, 0),   factor = 0.95 )"},{"path":"https://friendly.github.io/candisc/reference/vecscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale vectors to fill the current plot — vecscale","text":"vectors two-column matrix giving end points collection vectors bbox bounding box containing plot region within vectors plotted origin origin vectors factor maximum length rescaled vectors relative maximum possible","code":""},{"path":"https://friendly.github.io/candisc/reference/vecscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale vectors to fill the current plot — vecscale","text":"scale factor, multiplier vectors","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/vecscale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale vectors to fill the current plot — vecscale","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/vecscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale vectors to fill the current plot — vecscale","text":"","code":"bbox <- matrix(c(-3, 3, -2, 2), 2, 2) colnames(bbox) <- c(\"x\",\"y\") rownames(bbox) <- c(\"min\", \"max\") bbox #>      x  y #> min -3 -2 #> max  3  2  vecs <- matrix( runif(10, -1, 1), 5, 2)  plot(bbox) arrows(0, 0, vecs[,1], vecs[,2], angle=10, col=\"red\") (s <- vecscale(vecs)) #> [1] 2.310403 arrows(0, 0, s*vecs[,1], s*vecs[,2], angle=10)"},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Labeled Vectors in 2D or 3D — vectors","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"Graphics utility functions draw vectors origin collection points (using arrows 2D lines3d 3D) labels (using text texts3d).","code":""},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"","code":"vectors(   x,   origin = c(0, 0),   labels = rownames(x),   scale = 1,   col = \"blue\",   lwd = 1,   cex = 1,   length = 0.1,   angle = 13,   pos = NULL,   ... )"},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"x two-column matrix three-column matrix containing end points vectors origin Starting point(s) vectors labels Labels vectors scale multiplier length vector col color(s) vectors. lwd line width(s) vectors. cex color(s) vectors. length vectors, length edges arrow head (inches). angle vectors, angle shaft arrow edge arrow head. pos vectors, position text label relative vector head. pos==NULL, labels positioned labels outside, relative arrow ends. ... graphical parameters, lty, xpd, ...","code":""},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"None","code":""},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"graphical parameters col, lty lwd can vectors length greater one recycled necessary","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Labeled Vectors in 2D or 3D — vectors","text":"","code":"plot(c(-3, 3), c(-3,3), type=\"n\") X <- matrix(rnorm(10), ncol=2) rownames(X) <- LETTERS[1:5] vectors(X, scale=2, col=palette())"},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilks Lambda Tests for Canonical Correlations — Wilks","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"Tests sequential hypotheses \\(\\)th canonical correlation follow zero, $$\\rho_i = \\rho_{+1} = \\cdots = 0$$","code":""},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"","code":"Wilks(object, ...)  # S3 method for cancor Wilks(object, ...)  # S3 method for candisc Wilks(object, ...)"},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"object object class \"cancor\"\"} \\code{\"candisc\"\" ... arguments passed methods (used)","code":""},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"data.frame (class \"anova\") containing test statistics","code":""},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"Wilks' Lambda values calculated eigenvalues converted F statistics using Rao's approximation.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"Wilks(cancor): \"cancor\" method. Wilks(candisc): print() method \"candisc\" objects.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"Mardia, K. V., Kent, J. T. Bibby, J. M. (1979). Multivariate Analysis. London: Academic Press.","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/candisc/reference/Wilks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilks Lambda Tests for Canonical Correlations — Wilks","text":"","code":"data(Rohwer, package=\"heplots\") X <- as.matrix(Rohwer[,6:10])  # the PA tests Y <- as.matrix(Rohwer[,3:5])   # the aptitude/ability variables  cc <- cancor(X, Y, set.names=c(\"PA\", \"Ability\")) Wilks(cc) #>  #> Test of H0: The canonical correlations in the  #> current row and all that follow are zero #>  #>      CanR LR test stat approx F numDF denDF   Pr(> F)     #> 1 0.67033      0.44011   3.8961    15 168.8 5.535e-06 *** #> 2 0.38366      0.79923   1.8379     8 124.0   0.07608 .   #> 3 0.25065      0.93718   1.4078     3  63.0   0.24881     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  iris.mod <- lm(cbind(Petal.Length, Sepal.Length, Petal.Width, Sepal.Width) ~ Species, data=iris) iris.can <- candisc(iris.mod, data=iris) Wilks(iris.can) #>  #> Test of H0: The canonical correlations in the  #> current row and all that follow are zero #>  #>   LR test stat approx F numDF denDF   Pr(> F)     #> 1      0.02344  199.145     8   288 < 2.2e-16 *** #> 2      0.77797   13.794     3   145 5.794e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://friendly.github.io/candisc/reference/Wine.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical composition of three cultivars of wine — Wine","title":"Chemical composition of three cultivars of wine — Wine","text":"data results chemical analysis wines grown region Italy derived three different cultivars.  analysis determined quantities 13 constituents found three types wines.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemical composition of three cultivars of wine — Wine","text":"data frame 178 observations following 14 variables. Cultivar factor levels barolo grignolino barbera Alcohol numeric vector MalicAcid numeric vector Ash numeric vector AlcAsh numeric vector, Alkalinity ash Mg numeric vector, Magnesium Phenols numeric vector, Total phenols Flav numeric vector, Flavanoids NonFlavPhenols numeric vector Proa numeric vector, Proanthocyanins Color numeric vector, color intensity Hue numeric vector OD numeric vector, OD280/OD315 diluted wines Proline numeric vector","code":""},{"path":"https://friendly.github.io/candisc/reference/Wine.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chemical composition of three cultivars of wine — Wine","text":"data set obtained UCI Machine Learning Repository, http://archive.ics.uci.edu/ml/datasets/Wine. page references large number papers use data set compare different methods.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chemical composition of three cultivars of wine — Wine","text":"data set classic machine learning literature easy high-D classification problem, also interest examples MANOVA discriminant analysis. precise definitions variables unknown: units, measured, etc.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chemical composition of three cultivars of wine — Wine","text":"R, comparable data set contained ggbiplot package.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chemical composition of three cultivars of wine — Wine","text":"","code":"data(Wine) str(Wine) #> 'data.frame':\t178 obs. of  14 variables: #>  $ Cultivar      : Factor w/ 3 levels \"barolo\",\"grignolino\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Alcohol       : num  14.2 13.2 13.2 14.4 13.2 ... #>  $ MalicAcid     : num  1.71 1.78 2.36 1.95 2.59 1.76 1.87 2.15 1.64 1.35 ... #>  $ Ash           : num  2.43 2.14 2.67 2.5 2.87 2.45 2.45 2.61 2.17 2.27 ... #>  $ AlcAsh        : num  15.6 11.2 18.6 16.8 21 15.2 14.6 17.6 14 16 ... #>  $ Mg            : int  127 100 101 113 118 112 96 121 97 98 ... #>  $ Phenols       : num  2.8 2.65 2.8 3.85 2.8 3.27 2.5 2.6 2.8 2.98 ... #>  $ Flav          : num  3.06 2.76 3.24 3.49 2.69 3.39 2.52 2.51 2.98 3.15 ... #>  $ NonFlavPhenols: num  0.28 0.26 0.3 0.24 0.39 0.34 0.3 0.31 0.29 0.22 ... #>  $ Proa          : num  2.29 1.28 2.81 2.18 1.82 1.97 1.98 1.25 1.98 1.85 ... #>  $ Color         : num  5.64 4.38 5.68 7.8 4.32 6.75 5.25 5.05 5.2 7.22 ... #>  $ Hue           : num  1.04 1.05 1.03 0.86 1.04 1.05 1.02 1.06 1.08 1.01 ... #>  $ OD            : num  3.92 3.4 3.17 3.45 2.93 2.85 3.58 3.58 2.85 3.55 ... #>  $ Proline       : int  1065 1050 1185 1480 735 1450 1290 1295 1045 1045 ... #summary(Wine)  Wine.mlm <- lm(as.matrix(Wine[, -1]) ~ Cultivar, data=Wine) Wine.can <- candisc(Wine.mlm) Wine.can #>  #> Canonical Discriminant Analysis for Cultivar: #>  #>    CanRsq Eigenvalue Difference Percent Cumulative #> 1 0.90081     9.0817     4.9533  68.748     68.748 #> 2 0.80501     4.1285     4.9533  31.252    100.000 #>  #> Test of H0: The canonical correlations in the  #> current row and all that follow are zero #>  #>   LR test stat approx F numDF denDF   Pr(> F)     #> 1     0.019341   77.620    26   326 < 2.2e-16 *** #> 2     0.194990   56.422    12   164 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1   plot(Wine.can, ellipse=TRUE) #> Vector scale factor set to 5.168  plot(Wine.can, which=1)"},{"path":"https://friendly.github.io/candisc/reference/Wolves.html","id":null,"dir":"Reference","previous_headings":"","what":"Wolf skulls — Wolves","title":"Wolf skulls — Wolves","text":"Skull morphometric data Rocky Mountain Arctic wolves (Canis Lupus L.) taken Morrison (1990), originally Jolicoeur (1959).","code":""},{"path":"https://friendly.github.io/candisc/reference/Wolves.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wolf skulls — Wolves","text":"data frame 25 observations following 11 variables. group factor levels ar:f ar:m       rm:f rm:m, comprising combinations location sex location factor levels ar=Arctic, rm=Rocky Mountain sex factor levels f=female, m=male x1 palatal length, numeric vector x2 postpalatal length, numeric vector x3 zygomatic width, numeric vector x4 palatal width outside first upper molars, numeric vector x5 palatal width inside second upper molars, numeric vector x6 postglenoid foramina width, numeric vector x7 interorbital width, numeric vector x8 braincase width, numeric vector x9 crown length, numeric vector","code":""},{"path":"https://friendly.github.io/candisc/reference/Wolves.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wolf skulls — Wolves","text":"Morrison, D. F.  Multivariate Statistical Methods, (3rd ed.), 1990.  New York: McGraw-Hill, p. 288-289.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wolves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wolf skulls — Wolves","text":"variables expressed millimeters. goal determine geographic sex differences among wolf populations determined skull measurements.  MANOVA (canonical) discriminant analysis, factors group location sex provide alternative parameterizations.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wolves.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wolf skulls — Wolves","text":"Jolicoeur, P. ``Multivariate geographical variation wolf Canis lupis L.'', Evolution, XIII, 283--299.","code":""},{"path":"https://friendly.github.io/candisc/reference/Wolves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wolf skulls — Wolves","text":"","code":"data(Wolves)  # using group wolf.mod <-lm(cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9) ~ group, data=Wolves) car::Anova(wolf.mod) #>  #> Type II MANOVA Tests: Pillai test statistic #>       Df test stat approx F num Df den Df    Pr(>F)     #> group  3    2.2454   4.9592     27     45 1.191e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  wolf.can <-candisc(wolf.mod) plot(wolf.can) #> Vector scale factor set to 4.885  heplot(wolf.can)  #> Vector scale factor set to  12.04378   # using location, sex wolf.mod2 <-lm(cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9) ~ location*sex, data=Wolves) car::Anova(wolf.mod2) #>  #> Type II MANOVA Tests: Pillai test statistic #>              Df test stat approx F num Df den Df    Pr(>F)     #> location      1   0.95246   28.938      9     13 3.624e-07 *** #> sex           1   0.84633    7.955      9     13 0.0005229 *** #> location:sex  1   0.64944    2.676      9     13 0.0523865 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  wolf.can2 <-candiscList(wolf.mod2) plot(wolf.can2)"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-090-2024-05-05","dir":"Changelog","previous_headings":"","what":"Version 0.9.0 (2024-05-05)","title":"Version 0.9.0 (2024-05-05)","text":"CRAN release: 2024-05-06 semi-major release, largely documentation package. Created pkgdown site, https://friendly.github.io/candisc/ Convert documentation roxygen Extend description candisc/cancor methods Added diabetes vignette giving discursive examples","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-6-2021-10-06","dir":"Changelog","previous_headings":"","what":"Version 0.8-6 (2021-10-06)","title":"Version 0.8-6 (2021-10-06)","text":"CRAN release: 2021-10-07 Fix JSS URLs -> DOI","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-5-2020-12-15","dir":"Changelog","previous_headings":"","what":"Version 0.8-5 (2020-12-15)","title":"Version 0.8-5 (2020-12-15)","text":"CRAN release: 2021-01-22 Fix CRAN nits re conditional use rgl examples","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-4-2020-05-06","dir":"Changelog","previous_headings":"","what":"Version 0.8-4 (2020-05-06)","title":"Version 0.8-4 (2020-05-06)","text":"add points.1d option plot.candisc 1D case","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-3-2020-04-20","dir":"Changelog","previous_headings":"","what":"Version 0.8-3 (2020-04-20)","title":"Version 0.8-3 (2020-04-20)","text":"CRAN release: 2020-04-22 o dontrun/donttest examples heplot.candisc appease CRAN daemon.","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-2-2020-01-06","dir":"Changelog","previous_headings":"","what":"Version 0.8-2 (2020-01-06)","title":"Version 0.8-2 (2020-01-06)","text":"o Clarify docs plot.candisc wrt col & pch (thx: Mohammad Bahram) o candisc gets hex sticker GitHub o Fix notes devtools::check_win_devel","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-1-2017-10-05","dir":"Changelog","previous_headings":"","what":"Version 0.8-1 (2017-10-05)","title":"Version 0.8-1 (2017-10-05)","text":"o Fixed bug plot.candisc default col pch values (thx: David Carlson)","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-08-0-2017-09-16","dir":"Changelog","previous_headings":"","what":"Version 0.8-0 (2017-09-16)","title":"Version 0.8-0 (2017-09-16)","text":"CRAN release: 2017-09-19 o Fix 1D plot.candisc better reflect canonical structure coefficients. ylim scale now forced include 0 -1 /+1 depending signs structure coefficients. [thx: Martina Vandebroek] o Pass … boxplot() plot() 1D plot.candisc o Added diabetes vignette","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-07-2-2016-11-09","dir":"Changelog","previous_headings":"","what":"Version 0.7-2 (2016-11-09)","title":"Version 0.7-2 (2016-11-09)","text":"CRAN release: 2016-11-11 o Add Wilks.candisc method; corrects bug values stepdown tests canonical discriminant analysis calculated incorrectly [thx: Martina Vandebroek] o Now use Wilks.candisc print.candisc","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-07-1-2016-05-23","dir":"Changelog","previous_headings":"","what":"Version 0.7-1 (2016-05-23)","title":"Version 0.7-1 (2016-05-23)","text":"o respect var.lwd 2D plot.candisc() o heplot.candisc() gets rev.axes argument reverse axes var.pos argument position variable labels o vectors() now produces nicer arrow head la matlib::vectors() o added var.pos argument plot.candisc o allow suppress likelihood ratio tests print.candisc","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-07-0-2016-04-25","dir":"Changelog","previous_headings":"","what":"Version 0.7-0 (2016-04-25)","title":"Version 0.7-0 (2016-04-25)","text":"CRAN release: 2016-04-27 o Added Wine data – three cultivars simple canonical structure o Added ellipses plot.candisc(); enhanced candisc.Rd documentation o Added varOrder() effect ordering MLMs o plot.candisc() gets var.labels argument o added method=“colmean” descending=T/F varOrder() o plot.candisc() gets rev.axes argument o fixed imports() NAMESPACE CRAN checks","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-7-2015-04-15","dir":"Changelog","previous_headings":"","what":"Version 0.6-7 (2015-04-15)","title":"Version 0.6-7 (2015-04-15)","text":"CRAN release: 2015-04-19 o Now use rgl:: *3d functions requireNamespace(“rgl”) o import(car)","code":""},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-6-2013-06-17","dir":"Changelog","previous_headings":"","what":"Version 0.6-6 (2013-06-17)","title":"Version 0.6-6 (2013-06-17)","text":"","code":"o Added vecscale() to more reliably scale the variable vectors in plot.candisc() and heplot.candisc()   to the plot bounding box [thx: Uwe Ligges for the code] o Exported vecscale o Added can_lm() to calculate the canonical lm() representation of a term in an mlm"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-5-2013-03-20","dir":"Changelog","previous_headings":"","what":"Version 0.6-5 (2013-03-20)","title":"Version 0.6-5 (2013-03-20)","text":"CRAN release: 2013-06-12","code":"o candisc() now doesn't allow ndim > rank [thx: yu-chuan.chen@stonybrook.edu] o In plot.candisc() fixed bug in use of pch and col [thx: dcarlson@tamu.edu] and cleaned up code"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-4-2013-03-17","dir":"Changelog","previous_headings":"","what":"Version 0.6-4 (2013-03-17)","title":"Version 0.6-4 (2013-03-17)","text":"","code":"o Don't use paste0() to avoid dependency on R>2.15.0"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-3-2013-02-13","dir":"Changelog","previous_headings":"","what":"Version 0.6-3 (2013-02-13)","title":"Version 0.6-3 (2013-02-13)","text":"CRAN release: 2013-03-15","code":"o Minor documentation changes o In cancor(), now handle missing data more flexibly via na.rm= and use= o Now suggest corrplot package for cancor.Rd example"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-2-2013-01-30","dir":"Changelog","previous_headings":"","what":"Version 0.6-2 (2013-01-30)","title":"Version 0.6-2 (2013-01-30)","text":"CRAN release: 2013-02-12","code":"o Reorganized print() and summary() methods for cancor() o Smoothed out documentation o Added observation weights to cancor() methods o Added ability to plot X and or Y vectors in heplot.cancor() o Extended example of plot.cancor(), showing variable vectors for X & Y"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-1-2013-1-23","dir":"Changelog","previous_headings":"","what":"Version 0.6-1 (2013-1-23)","title":"Version 0.6-1 (2013-1-23)","text":"CRAN release: 2013-01-30","code":"o Continued development of methods and plots for canonical correlation analysis within the   HE plot framework: o Now export scores() and scores.cancor() method o coef.cancor gets a standardize= argument o Added redundancy() for redundancy analysis o Added a plot.cancor() method, visualizing the relations between the Ycan and Xcan variable scores o Added vectors3d() o Added heplot3d() method for cancor objects. o More significantly, re-implemented cancor() as an S3 generic, with a cancor.formula method and    the original as the cancor.default method."},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-06-0-2013-1-20","dir":"Changelog","previous_headings":"","what":"Version 0.6-0 (2013-1-20)","title":"Version 0.6-0 (2013-1-20)","text":"CRAN release: 2013-01-23","code":"o Added cancor and related methods for canonical correlation analysis o Added Wilks() methods for Wilks' Lambda canonical tests o Added vectors() for drawing labeled vectors o Added S3 heplot.cancor() method for cancor objects."},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-23-2012-2-3","dir":"Changelog","previous_headings":"","what":"Version 0.5-23 (2012-2-3)","title":"Version 0.5-23 (2012-2-3)","text":"","code":"o Fixed buglet in summary.candisc() [thx: David Carlson, dcarlson@tamu.edu] o heplot.candisc now uses plot.candisc in the 1 df case"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-22-2011-12-10","dir":"Changelog","previous_headings":"","what":"Version 0.5-22 (2011-12-10)","title":"Version 0.5-22 (2011-12-10)","text":"","code":"o Extended Description:"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-21-2011-09-12","dir":"Changelog","previous_headings":"","what":"Version 0.5-21 (2011-09-12)","title":"Version 0.5-21 (2011-09-12)","text":"CRAN release: 2011-12-11","code":"o Fixed Authors@R in DESCRIPTION for R 2.14.x"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-20-2010-10-208","dir":"Changelog","previous_headings":"","what":"Version 0.5-20 (2010-10-208)","title":"Version 0.5-20 (2010-10-208)","text":"","code":"o Updated links to datavis.ca o Updated candisc heplot3d() examples"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-19-2010-7-29","dir":"Changelog","previous_headings":"","what":"Version 0.5-19 (2010-7-29)","title":"Version 0.5-19 (2010-7-29)","text":"CRAN release: 2010-09-19","code":"o switched inst/CHANGES to NEWS  o Extended candiscList and Grass examples  o Extended package description  o Fixed minor buglet in print.candisc"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-18-2010-7-27","dir":"Changelog","previous_headings":"","what":"Version 0.5-18 (2010-7-27)","title":"Version 0.5-18 (2010-7-27)","text":"CRAN release: 2010-07-29","code":"o  Fixed predictor.names problem with car_2.0-0 o  Added var.cex to heplot.candisc and heplot3d.candisc"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-17-2010-2-11","dir":"Changelog","previous_headings":"","what":"Version 0.5-17 (2010-2-11)","title":"Version 0.5-17 (2010-2-11)","text":"","code":"o  Allow to select canonical dimension in plot(candisc(), which=)"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-15-2009-6-12","dir":"Changelog","previous_headings":"","what":"Version 0.5-15 (2009-6-12)","title":"Version 0.5-15 (2009-6-12)","text":"CRAN release: 2009-06-14","code":"o  Added titles.1d argument to plot.candisc to allow customized titles for 1D plots    (wish of Manuel Sp?nola)"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-13-2008-12-16","dir":"Changelog","previous_headings":"","what":"Version 0.5-13 (2008-12-16)","title":"Version 0.5-13 (2008-12-16)","text":"CRAN release: 2009-02-02","code":"o  Added Wolves data, with examples for 2-way design. o  Improved plot for 1D case."},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-11-2008-11-12","dir":"Changelog","previous_headings":"","what":"Version 0.5-11 (2008-11-12)","title":"Version 0.5-11 (2008-11-12)","text":"","code":"o  Michael Friendly now maintainer o  now require heplots >= 0.8-3 for use of xlim, ylim, zlim o  added asp=\"iso\" to heplot3d.candisc, so default is now equal scaling"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-10-2008-11-5","dir":"Changelog","previous_headings":"","what":"Version 0.5-10 (2008-11-5)","title":"Version 0.5-10 (2008-11-5)","text":"CRAN release: 2008-11-09","code":"o  improved documentation o  added var.lwd to heplot3d.candisc o  changed rgl.* to *3d functions to avoid rgl problems o  added suffix= to heplot.candisc and heplot3d.candisc o  added graphics=TRUE to menus in *.candiscList functions o  added suffix= to plot.candisc"},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-9-2008-04-24","dir":"Changelog","previous_headings":"","what":"Version 0.5-9 (2008-04-24)","title":"Version 0.5-9 (2008-04-24)","text":"CRAN release: 2008-04-14","code":""},{"path":[]},{"path":"https://friendly.github.io/candisc/news/index.html","id":"version-05-7-2007-10-29","dir":"Changelog","previous_headings":"","what":"Version 0.5-7 (2007-10-29)","title":"Version 0.5-7 (2007-10-29)","text":"","code":"o Initial version released to CRAN."}]
